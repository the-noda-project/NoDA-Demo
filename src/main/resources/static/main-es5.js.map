{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/@core/core.module.ts","webpack:///src/app/@core/http/api-prefix.interceptor.ts","webpack:///src/app/@core/http/error-handler.interceptor.ts","webpack:///src/app/@core/index.ts","webpack:///src/app/@core/logger.service.ts","webpack:///src/app/@core/route-reusable-strategy.ts","webpack:///src/app/@core/until-destroyed.ts","webpack:///src/app/@shared/index.ts","webpack:///src/app/@shared/loader/loader.component.ts","webpack:///src/app/@shared/loader/loader.component.html","webpack:///src/app/@shared/shared.module.ts","webpack:///src/app/about/about-routing.module.ts","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/about/about.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/dbconnection-pop-up/dbconnection-pop-up.component.ts","webpack:///src/app/home/dbconnection-pop-up/dbconnection-pop-up.component.html","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/quote.service.ts","webpack:///src/app/i18n/i18n.module.ts","webpack:///src/app/i18n/i18n.service.ts","webpack:///src/app/i18n/index.ts","webpack:///src/app/i18n/language-selector.component.ts","webpack:///src/app/i18n/language-selector.component.html","webpack:///src/app/query-construction/query-construction-routing.module.ts","webpack:///src/app/query-construction/query-construction.component.ts","webpack:///src/app/query-construction/query-construction.component.html","webpack:///src/app/query-construction/query-construction.module.ts","webpack:///src/app/query-construction/query-construction.service.ts","webpack:///src/app/shell/header/header.component.ts","webpack:///src/app/shell/header/header.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/shell.module.ts","webpack:///src/app/shell/shell.service.ts","webpack:///src/app/shell/sidebar/sidebar.component.ts","webpack:///src/app/shell/sidebar/sidebar.component.html","webpack:///src/environments/.env.ts","webpack:///src/environments/environment.ts","webpack:///src/hmr.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","CoreModule","parentModule","provide","useClass","multi","imports","providers","ApiPrefixInterceptor","request","next","test","url","clone","serverUrl","handle","providedIn","log","ErrorHandlerInterceptor","pipe","error","errorHandler","response","production","LogLevel","Logger","source","objects","console","Debug","info","Info","warn","Warning","func","level","concat","apply","outputs","forEach","output","RouteReusableStrategy","route","detachedTree","future","curr","routeConfig","data","reuse","untilDestroyedSymbol","Symbol","untilDestroyed","instance","destroyMethodName","originalDestroy","hasDestroyFunction","constructor","name","arguments","complete","LoaderComponent","isLoading","selector","templateUrl","styleUrls","SharedModule","declarations","routes","childRoutes","path","component","title","AboutRoutingModule","forChild","AboutComponent","version","AboutModule","loadChildren","m","QueryConstructionModule","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","router","activatedRoute","titleService","translateService","i18nService","notificationOptions","position","timeOut","enableProductionMode","debug","init","defaultLanguage","supportedLanguages","onNavigationEnd","events","event","onLangChange","firstChild","outlet","subscribe","setTitle","instant","destroy","AppModule","bootstrap","DbconnectionPopUpComponent","modal","toast","quoteService","selectImageOfDB","db","imageOfDB","connectToDB","dbName","port","username","password","collection","res","dismissAll","navigate","err","close","goToVisualization","HomeRoutingModule","HomeComponent","activeArray","getConnectionMessage","chosenDatabaseStore","modalref","open","windowClass","componentInstance","openModalForDBConnection","HomeModule","QuoteService","httpClient","dataFromServer","get","responseType","toPromise","body","post","I18nModule","languageKey","extract","s","I18nService","setTranslation","language","langChangeSubscription","localStorage","setItem","lang","unsubscribe","getItem","getBrowserCultureLang","isSupportedLanguage","includes","split","find","supportedLanguage","startsWith","Boolean","use","currentLang","LanguageSelectorComponent","inNavbar","menuClass","QueryConstructionRoutingModule","QueryConstructionComponent","queryConstructionServ","activeRoute","chosenGeoSQLFunction","dbChangeConnectorLoading","idArray","opt","floor","ceil","value","maxValue","isDropDownOpen","isQueryConstructorTabOpen","isSQLqueryTabOpen","isActualDBTabOpen","drawItems","actualQuery","drawOptions","edit","featureGroup","draw","marker","circle","shapeOptions","fillOpacity","rectangle","showArea","polyline","polygon","circlemarker","dropDownProps","mongo","neo4j","hbase","redis","layers","options","maxZoom","attribution","zoom","center","fps","windowBetweenFloorAndCeil","changeFloor","changeCeil","paramMap","params","activeDatabase","setTimeout","query","objectIdFieldName","objectLocationFieldName","objectTimeFieldName","splice","length","addLayer","layer","on","Event","CREATED","drawLogic","type","layerType","theCenterPt","getLatLng","lng","lat","theRadius","getRadius","radius","lon","rectanglePoints","getLatLngs","lat1","lon1","fromValue","spatialSqlQueryPost","JSON","parse","updateData","getData","parsedData","groupedData","Math","round","r","random","element","index","findIndex","push","color","spatialVisualization","minTimestamp","maxTimestamp","spatioTemporalSqlQueryPost","Date","parseInt","timestampManipulation","playSpatioTemporal","time","manipulatedTime","getTime","el","myRenderer","padding","myIcon","html","getRGBofPin","renderer","fillColor","fill","weight","stroke","i","key","icon","changeStateOfDropDown","openCloseQueryConstructorTab","openCloseSQLQueryTab","openCloseActualDBTab","onMapReady","onDrawCreated","QueryConstructionService","idFieldName","locationFieldName","timeFieldName","HeaderComponent","menuHidden","toggleMenu","ShellComponent","ShellModule","Shell","children","themeFromMapBox","SidebarComponent","barChartOptions","responsive","scales","xAxes","yAxes","plugins","datalabels","anchor","align","barChartLabels","barChartType","barChartLegend","barChartData","label","doughnutChartLabels","doughnutChartData","doughnutChartType","env","npm_package_version","environment","hmr","hmrBootstrap","ngModule","hot","accept","mod","dispose","appRef","injector","elements","components","c","location","nativeElement","makeVisible","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport { ApiPrefixInterceptor } from './http/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './http/error-handler.interceptor';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, TranslateModule, RouterModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true,\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(\n        `${parentModule} has already been loaded. Import Core module in the AppModule only.`\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\n/**\n * Prefixes all requests not starting with `http[s]` with `environment.serverUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (!/^(http|https):/i.test(request.url)) {\n      request = request.clone({ url: environment.serverUrl + request.url });\n    }\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger } from '../logger.service';\n\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next\n      .handle(request)\n      .pipe(catchError((error) => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\n    if (!environment.production) {\n      // Do something with the error\n      log.error('Request error', response);\n    }\n    throw response;\n  }\n}\n","export * from './core.module';\nexport * from './http/api-prefix.interceptor';\nexport * from './http/error-handler.interceptor';\nexport * from './route-reusable-strategy';\nexport * from './logger.service';\nexport * from './until-destroyed';\n","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (\n  source: string | undefined,\n  level: LogLevel,\n  ...objects: any[]\n) => void;\n\nexport class Logger {\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) {}\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source\n        ? ['[' + this.source + ']'].concat(objects)\n        : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach((output) =>\n        output.apply(output, [this.source, level, ...objects])\n      );\n    }\n  }\n}\n","import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy,\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nconst untilDestroyedSymbol = Symbol('untilDestroyed');\n\n/**\n * RxJS operator that unsubscribe from observables on destory.\n * Code forked from https://github.com/NetanelBasal/ngx-take-until-destroy\n *\n * IMPORTANT: Add the `untilDestroyed` operator as the last one to prevent leaks with intermediate observables in the\n * operator chain.\n *\n * @param instance The parent Angular component or object instance.\n * @param destroyMethodName The method to hook on (default: 'ngOnDestroy').\n * @example\n * ```\n * import { untilDestroyed } from '@core';\n *\n * @Component({\n * selector: 'app-example',\n *   templateUrl: './example.component.html'\n * })\n * export class ExampleComponent implements OnInit, OnDestroy {\n *   ngOnInit() {\n *     interval(1000)\n *       .pipe(untilDestroyed(this))\n *       .subscribe(val => console.log(val));\n *   }\n *\n *   // This method must be present, even if empty.\n *   ngOnDestroy() {\n *     // To protect you, an error will be thrown if it doesn't exist.\n *   }\n * }\n * ```\n */\nexport function untilDestroyed(\n  instance: object,\n  destroyMethodName: string = 'ngOnDestroy'\n) {\n  return <T>(source: Observable<T>) => {\n    const originalDestroy = instance[destroyMethodName];\n    const hasDestroyFunction = typeof originalDestroy === 'function';\n\n    if (!hasDestroyFunction) {\n      throw new Error(\n        `${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\n      );\n    }\n\n    if (!instance[untilDestroyedSymbol]) {\n      instance[untilDestroyedSymbol] = new Subject();\n\n      instance[destroyMethodName] = function () {\n        if (hasDestroyFunction) {\n          originalDestroy.apply(this, arguments);\n        }\n        instance[untilDestroyedSymbol].next();\n        instance[untilDestroyedSymbol].complete();\n      };\n    }\n\n    return source.pipe(takeUntil<T>(instance[untilDestroyedSymbol]));\n  };\n}\n","export * from './shared.module';\nexport * from './loader/loader.component';\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnInit {\n  @Input() isLoading = false;\n  @Input() message: string | undefined;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div [hidden]=\"!isLoading\" class=\"text-xs-center\">\n  <i class=\"fas fa-cog fa-spin fa-3x\"></i> <span>{{ message }}</span>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoaderComponent } from './loader/loader.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LoaderComponent],\n  exports: [LoaderComponent],\n})\nexport class SharedModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { extract } from '@app/i18n';\nimport { Shell } from '@app/shell/shell.service';\nimport { AboutComponent } from './about.component';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    {\n      path: 'about',\n      component: AboutComponent,\n      data: { title: extract('About') },\n    },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class AboutRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n})\nexport class AboutComponent implements OnInit {\n  version: string | null = environment.version;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"container-fluid\">\n  <div class=\"jumbotron text-center\">\n    <h1>\n      <span translate>APP_NAME</span>\n    </h1>\n    <p>\n      <i class=\"far fa-bookmark\"></i> <span translate>Version</span>\n      {{ version }}\n    </p>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AboutRoutingModule } from './about-routing.module';\nimport { AboutComponent } from './about.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, AboutRoutingModule],\n  declarations: [AboutComponent],\n})\nexport class AboutModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'visualization',\n    loadChildren: () =>\n      import('./query-construction/query-construction.module').then(\n        (m) => m.QueryConstructionModule\n      ),\n  },\n  // Fallback when no prior route is matched\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { merge } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger, untilDestroyed } from '@core';\nimport { I18nService } from '@app/i18n';\n\nconst log = new Logger('App');\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  notificationOptions = {\n    position: ['top', 'right'],\n    timeOut: 2000,\n  };\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    private translateService: TranslateService,\n    private i18nService: I18nService\n  ) {}\n\n  ngOnInit() {\n    // Setup logger\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n\n    log.debug('init');\n\n    // Setup translations\n    this.i18nService.init(\n      environment.defaultLanguage,\n      environment.supportedLanguages\n    );\n\n    const onNavigationEnd = this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd)\n    );\n\n    // Change page title on navigation or language change, based on route data\n    merge(this.translateService.onLangChange, onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter((route) => route.outlet === 'primary'),\n        switchMap((route) => route.data),\n        untilDestroyed(this)\n      )\n      .subscribe((event) => {\n        const title = event.title;\n        if (title) {\n          this.titleService.setTitle(this.translateService.instant(title));\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.i18nService.destroy();\n  }\n}\n","<simple-notifications [options]=\"notificationOptions\"></simple-notifications>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreModule } from '@core';\nimport { SharedModule } from '@shared';\nimport { HomeModule } from './home/home.module';\nimport { ShellModule } from './shell/shell.module';\nimport { AboutModule } from './about/about.module';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { QueryConstructionModule } from './query-construction/query-construction.module';\nimport { SimpleNotificationsModule } from 'angular2-notifications';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot(),\n    NgbModule,\n    CoreModule,\n    SharedModule,\n    ShellModule,\n    HomeModule,\n    BrowserAnimationsModule,\n    QueryConstructionModule,\n    SimpleNotificationsModule.forRoot(),\n    AboutModule,\n    AppRoutingModule, // must be imported as the last module as it contains the fallback route\n  ],\n  declarations: [AppComponent],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NotificationsService } from 'angular2-notifications';\nimport { QuoteService } from '../quote.service';\n\n@Component({\n  selector: 'app-dbconnection-pop-up',\n  templateUrl: './dbconnection-pop-up.component.html',\n  styleUrls: ['./dbconnection-pop-up.component.scss'],\n})\nexport class DbconnectionPopUpComponent implements OnInit {\n  @Input()\n  db: string;\n  imageOfDB: string;\n\n  dbName: string;\n  url: string;\n  port: number;\n  username: string;\n  password: string;\n  collection: string;\n\n  constructor(\n    private modal: NgbModal,\n    private router: Router,\n    private toast: NotificationsService,\n    private quoteService: QuoteService\n  ) {}\n\n  ngOnInit(): void {\n    this.selectImageOfDB();\n  }\n\n  selectImageOfDB() {\n    if (this.db === 'mongodb') {\n      this.imageOfDB = 'assets/MongoDB-Logo.png';\n    }\n    if (this.db === 'neo4j') {\n      this.imageOfDB = 'assets/neo4j_logo.png';\n    }\n    if (this.db === 'hbase') {\n      this.imageOfDB = 'assets/hbase1.png';\n    }\n    if (this.db === 'redis') {\n      this.imageOfDB = 'assets/Redis_Logo.svg';\n    }\n  }\n\n  goToVisualization() {\n    if (\n      this.db === 'mongodb' ||\n      this.db === 'neo4j' ||\n      this.db === 'hbase' ||\n      this.db === 'redis'\n    ) {\n      this.quoteService\n        .connectToDB(\n          this.db,\n          this.dbName,\n          this.url,\n          this.port,\n          this.username,\n          this.password,\n          this.collection\n        )\n        .then((res) => {\n          this.modal.dismissAll();\n          console.log(res);\n          this.router.navigate(['/visualization/dbtype/' + this.db]);\n        })\n        .catch((err) => {\n          this.toast.error('Error', err);\n          console.log(err);\n        });\n    } else {\n      this.toast.error('Error', 'Please choose a database first to continue.');\n    }\n  }\n\n  close() {\n    this.modal.dismissAll();\n  }\n}\n","<div class=\"modal-content modalfade pt-2 pb-2\">\n  <div class=\"modal-header\">\n    <div class=\"col-auto p-0 align-self-center\">\n      <img src=\"{{ imageOfDB }}\" class=\"img-fluid\" style=\"width: 8rem;\" />\n    </div>\n    <div\n      class=\"col-auto align-self-center\"\n      style=\"font-size: 1.1rem; font-weight: bold;\"\n    >\n      Connection Parameters\n    </div>\n  </div>\n  <div class=\"molad-body p-3\">\n    <div class=\"row w-100 m-0\">\n      <div class=\"col-12 mb-2\">\n        <label>Database</label>\n        <input\n          class=\"form-control inputStyle\"\n          [(ngModel)]=\"dbName\"\n          placeholder=\"Database\"\n        />\n      </div>\n      <div class=\"col-12 mb-2\">\n        <label>Collection</label>\n        <input\n          class=\"form-control inputStyle\"\n          [(ngModel)]=\"collection\"\n          placeholder=\"Collection\"\n        />\n      </div>\n      <div class=\"col-6\">\n        <label>Url</label>\n        <input\n          class=\"form-control inputStyle\"\n          [(ngModel)]=\"url\"\n          placeholder=\"Url\"\n        />\n      </div>\n      <div class=\"col-6\">\n        <label>Port</label>\n        <input\n          class=\"form-control inputStyle\"\n          [(ngModel)]=\"port\"\n          placeholder=\"Port\"\n        />\n      </div>\n      <div class=\"col-6 mt-2\" *ngIf=\"db !== 'hbase' && db !== 'redis'\">\n        <label>Username</label>\n        <input\n          class=\"form-control inputStyle\"\n          [(ngModel)]=\"username\"\n          placeholder=\"Username\"\n        />\n      </div>\n      <div class=\"col-6 mt-2\" *ngIf=\"db !== 'hbase' && db !== 'redis'\">\n        <label>Password</label>\n        <input\n          class=\"form-control inputStyle\"\n          [(ngModel)]=\"password\"\n          placeholder=\"Password\"\n        />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"modal-footer mt-2\">\n    <button\n      (click)=\"close()\"\n      class=\"btn font-weight-bold\"\n      style=\"color: #b12f26; font-size: 1rem; border: 2px solid #b12f26;\"\n    >\n      Cancel\n    </button>\n    <button\n      class=\"btn font-weight-bold\"\n      (click)=\"goToVisualization()\"\n      style=\"color: #14274e; font-size: 1rem; border: 2px solid #14274e;\"\n    >\n      Connect\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\nimport { Shell } from '@app/shell/shell.service';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/', pathMatch: 'full' },\n  Shell.childRoutes([\n    {\n      path: '',\n      component: HomeComponent,\n      // data: { title: extract('Home') },\n    },\n  ]),\n\n  // { path: 'visualization/:case', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class HomeRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationsService } from 'angular2-notifications';\nimport { QuoteService } from './quote.service';\nimport * as _ from 'lodash';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DbconnectionPopUpComponent } from './dbconnection-pop-up/dbconnection-pop-up.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  chosenDatabaseStore: string;\n\n  activeArray: Array<any> = [];\n\n  constructor(\n    private quoteService: QuoteService,\n    private router: Router,\n    private modal: NgbModal,\n    private toast: NotificationsService\n  ) {}\n\n  ngOnInit() {\n    // Responce for noda server connection\n    this.quoteService.getConnectionMessage().then((res: any) => {\n      console.log(res);\n    });\n  }\n\n  openModalForDBConnection() {\n    if (\n      this.chosenDatabaseStore === 'mongodb' ||\n      this.chosenDatabaseStore === 'neo4j' ||\n      this.chosenDatabaseStore === 'hbase' ||\n      this.chosenDatabaseStore === 'redis'\n    ) {\n      const modalref = this.modal.open(DbconnectionPopUpComponent, {\n        windowClass: 'modalStyle',\n      });\n      modalref.componentInstance.db = this.chosenDatabaseStore;\n    } else {\n      this.toast.error('Error', 'Please choose a database first to continue.');\n    }\n  }\n\n  chooseDatabaseStore(dbName: string) {\n    this.chosenDatabaseStore = dbName;\n  }\n}\n","<div class=\"container-fluid p-0\" style=\"height: 100vh; width: 100vw;\">\n  <div\n    class=\"row w-100 m-0 pl-2 pr-2\"\n    style=\"height: 7rem; background-color: #14274e;\"\n  >\n    <div class=\"col-12 d-flex align-items-center\">\n      <img\n        src=\"../../assets/logopapei3.png\"\n        class=\"img-fluid\"\n        style=\"width: 14rem;\"\n      />\n    </div>\n    <!-- <div class=\"col-6 d-flex align-items-center justify-content-end\">\n      <img\n      src=\"../../assets/data_stories.png\"\n      class=\"img-fluid\"\n      style=\"width: 7rem;\"\n    />\n    </div> -->\n  </div>\n\n  <div\n    class=\"row w-100 m-0 d-flex justify-content-center\"\n    style=\"height: calc(100vh-8rem); padding-top: 4rem;\"\n  >\n    <div class=\"col-12\">\n      <div\n        class=\"row w-100 m-0 d-flex justify-content-center font-weight-bold\"\n        style=\"font-size: 2rem; color: #14274e;\"\n      >\n        Choose a Database Store to connect\n      </div>\n      <div\n        class=\"row w-100 m-0 d-flex justify-content-center font-weight-bold\"\n        style=\"font-size: 2rem; color: #14274e; padding-top: 8rem;\"\n      >\n        <!-- MongoDB -->\n        <div class=\"col-auto\">\n          <div\n            [ngClass]=\"{\n              oval: chosenDatabaseStore !== 'mongodb',\n              'oval-active': chosenDatabaseStore === 'mongodb'\n            }\"\n            class=\"oval\"\n          ></div>\n          <div\n            [ngClass]=\"{\n              lines: chosenDatabaseStore !== 'mongodb',\n              'lines-active': chosenDatabaseStore === 'mongodb'\n            }\"\n            class=\"lines d-flex justify-content-center align-items-center\"\n          >\n            <img\n              src=\"../../assets/MongoDB-Logo.png\"\n              class=\"img-fluid\"\n              style=\"height: 2.2rem; margin-top: -1rem;\"\n            />\n          </div>\n          <div\n            [ngClass]=\"{\n              oval: chosenDatabaseStore !== 'mongodb',\n              'oval-active': chosenDatabaseStore === 'mongodb'\n            }\"\n            class=\"oval\"\n            style=\"margin-top: 2.4rem;\"\n          ></div>\n          <div class=\"text-center mt-3\">\n            <i\n              *ngIf=\"chosenDatabaseStore !== 'mongodb'\"\n              (click)=\"chooseDatabaseStore('mongodb')\"\n              class=\"far fa-square pointerToClick\"\n            ></i>\n            <i\n              *ngIf=\"chosenDatabaseStore === 'mongodb'\"\n              class=\"fas fa-check-square pointerToClick\"\n            ></i>\n          </div>\n        </div>\n        <!-- Neo4j -->\n        <div class=\"col-auto ml-5\">\n          <div\n            [ngClass]=\"{\n              oval: chosenDatabaseStore !== 'neo4j',\n              'oval-active': chosenDatabaseStore === 'neo4j'\n            }\"\n            class=\"oval\"\n          ></div>\n          <div\n            [ngClass]=\"{\n              lines: chosenDatabaseStore !== 'neo4j',\n              'lines-active': chosenDatabaseStore === 'neo4j'\n            }\"\n            class=\"lines d-flex justify-content-center align-items-center\"\n          >\n            <img\n              src=\"../../assets/neo4j_logo.png\"\n              class=\"img-fluid\"\n              style=\"height: 2.2rem;\"\n            />\n          </div>\n          <div\n            [ngClass]=\"{\n              oval: chosenDatabaseStore !== 'neo4j',\n              'oval-active': chosenDatabaseStore === 'neo4j'\n            }\"\n            class=\"oval\"\n            style=\"margin-top: 2.4rem;\"\n          ></div>\n          <div class=\"text-center mt-3\">\n            <i\n              *ngIf=\"chosenDatabaseStore !== 'neo4j'\"\n              (click)=\"chooseDatabaseStore('neo4j')\"\n              class=\"far fa-square pointerToClick\"\n            ></i>\n            <i\n              *ngIf=\"chosenDatabaseStore === 'neo4j'\"\n              class=\"fas fa-check-square pointerToClick\"\n            ></i>\n          </div>\n        </div>\n        <!-- HBASE -->\n        <div class=\"col-auto ml-5\">\n          <div\n            [ngClass]=\"{\n              oval: chosenDatabaseStore !== 'hbase',\n              'oval-active': chosenDatabaseStore === 'hbase'\n            }\"\n            class=\"oval\"\n          ></div>\n          <div\n            [ngClass]=\"{\n              lines: chosenDatabaseStore !== 'hbase',\n              'lines-active': chosenDatabaseStore === 'hbase'\n            }\"\n            class=\"lines d-flex justify-content-center align-items-center\"\n          >\n            <img\n              src=\"../../assets/hbase1.png\"\n              class=\"img-fluid\"\n              style=\"height: 2rem;\"\n            />\n          </div>\n          <div\n            [ngClass]=\"{\n              oval: chosenDatabaseStore !== 'hbase',\n              'oval-active': chosenDatabaseStore === 'hbase'\n            }\"\n            class=\"oval\"\n            style=\"margin-top: 2.4rem;\"\n          ></div>\n          <div class=\"text-center mt-3\">\n            <i\n              *ngIf=\"chosenDatabaseStore !== 'hbase'\"\n              (click)=\"chooseDatabaseStore('hbase')\"\n              class=\"far fa-square pointerToClick\"\n            ></i>\n            <i\n              *ngIf=\"chosenDatabaseStore === 'hbase'\"\n              class=\"fas fa-check-square pointerToClick\"\n            ></i>\n          </div>\n        </div>\n        <!-- Redis -->\n        <div class=\"col-auto ml-5\">\n          <div\n            [ngClass]=\"{\n              oval: chosenDatabaseStore !== 'redis',\n              'oval-active': chosenDatabaseStore === 'redis'\n            }\"\n            class=\"oval\"\n          ></div>\n          <div\n            [ngClass]=\"{\n              lines: chosenDatabaseStore !== 'redis',\n              'lines-active': chosenDatabaseStore === 'redis'\n            }\"\n            class=\"lines d-flex justify-content-center align-items-center\"\n          >\n            <img\n              src=\"../../assets/Redis_Logo.svg\"\n              class=\"img-fluid\"\n              style=\"height: 2.2rem;\"\n            />\n          </div>\n          <div\n            [ngClass]=\"{\n              oval: chosenDatabaseStore !== 'redis',\n              'oval-active': chosenDatabaseStore === 'redis'\n            }\"\n            class=\"oval\"\n            style=\"margin-top: 2.4rem;\"\n          ></div>\n          <div class=\"text-center mt-3\">\n            <i\n              *ngIf=\"chosenDatabaseStore !== 'redis'\"\n              (click)=\"chooseDatabaseStore('redis')\"\n              class=\"far fa-square pointerToClick\"\n            ></i>\n            <i\n              *ngIf=\"chosenDatabaseStore === 'redis'\"\n              class=\"fas fa-check-square pointerToClick\"\n            ></i>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"row w-100 m-0 d-flex justify-content-center font-weight-bold\"\n        style=\"font-size: 2rem; color: #14274e; padding-top: 6rem;\"\n      >\n        <button\n          class=\"btn font-weight-bold\"\n          (click)=\"openModalForDBConnection()\"\n          style=\"color: #14274e; font-size: 1.6rem; border: 2px solid #14274e;\"\n        >\n          Next <i style=\"color: #14274e;\" class=\"fa fa-angle-right ml-2\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '@core';\nimport { SharedModule } from '@shared';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DbconnectionPopUpComponent } from './dbconnection-pop-up/dbconnection-pop-up.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    LeafletModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    SharedModule,\n    HomeRoutingModule,\n  ],\n  declarations: [HomeComponent, DbconnectionPopUpComponent],\n})\nexport class HomeModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuoteService {\n  dataFromServer: string;\n\n  constructor(private httpClient: HttpClient) {}\n\n  updateData(data: string) {\n    this.dataFromServer = data;\n  }\n\n  getData() {\n    return this.dataFromServer;\n  }\n\n  getConnectionMessage() {\n    return this.httpClient\n      .get('/connection-message', { responseType: 'text' })\n      .toPromise();\n  }\n\n  connectToDB(\n    db?: string,\n    dbName?: string,\n    url?: string,\n    port?: number,\n    username?: string,\n    password?: string,\n    collection?: string\n  ) {\n    const body = {\n      db: db,\n      dbName: dbName,\n      url: url,\n      port: port,\n      username: username,\n      password: password,\n      collection: collection\n    };\n\n    return this.httpClient\n      .post('/db-connection/' + body.db, body, { responseType: 'text' })\n      .toPromise();\n  }\n\n  // getNodaSTData() {\n  //   return this.httpClient\n  //     .get('/noda-st-timelapse', { responseType: 'text' })\n  //     .toPromise();\n  // }\n\n  // getNodaSpatialData() {\n  //   return this.httpClient\n  //     .get('/noda-spatial', { responseType: 'text' })\n  //     .toPromise();\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { LanguageSelectorComponent } from './language-selector.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, NgbModule],\n  declarations: [LanguageSelectorComponent],\n  exports: [LanguageSelectorComponent],\n})\nexport class I18nModule {}\n","import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\nimport { Logger } from '@core/logger.service';\nimport enUS from '../../translations/en-US.json';\n\nconst log = new Logger('I18nService');\nconst languageKey = 'language';\n\n/**\n * Pass-through function to mark a string for translation extraction.\n * Running `npm translations:extract` will include the given string by using this.\n * @param s The string to extract for translation.\n * @return The same string.\n */\nexport function extract(s: string) {\n  return s;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nService {\n  defaultLanguage!: string;\n  supportedLanguages!: string[];\n\n  private langChangeSubscription!: Subscription;\n\n  constructor(private translateService: TranslateService) {\n    // Embed languages to avoid extra HTTP requests\n    translateService.setTranslation('en-US', enUS);\n  }\n\n  /**\n   * Initializes i18n for the application.\n   * Loads language from local storage if present, or sets default language.\n   * @param defaultLanguage The default language to use.\n   * @param supportedLanguages The list of supported languages.\n   */\n  init(defaultLanguage: string, supportedLanguages: string[]) {\n    this.defaultLanguage = defaultLanguage;\n    this.supportedLanguages = supportedLanguages;\n    this.language = '';\n\n    // Warning: this subscription will always be alive for the app's lifetime\n    this.langChangeSubscription = this.translateService.onLangChange.subscribe(\n      (event: LangChangeEvent) => {\n        localStorage.setItem(languageKey, event.lang);\n      }\n    );\n  }\n\n  /**\n   * Cleans up language change subscription.\n   */\n  destroy() {\n    if (this.langChangeSubscription) {\n      this.langChangeSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Sets the current language.\n   * Note: The current language is saved to the local storage.\n   * If no parameter is specified, the language is loaded from local storage (if present).\n   * @param language The IETF language code to set.\n   */\n  set language(language: string) {\n    language =\n      language ||\n      localStorage.getItem(languageKey) ||\n      this.translateService.getBrowserCultureLang();\n    let isSupportedLanguage = this.supportedLanguages.includes(language);\n\n    // If no exact match is found, search without the region\n    if (language && !isSupportedLanguage) {\n      language = language.split('-')[0];\n      language =\n        this.supportedLanguages.find((supportedLanguage) =>\n          supportedLanguage.startsWith(language)\n        ) || '';\n      isSupportedLanguage = Boolean(language);\n    }\n\n    // Fallback if language is not supported\n    if (!isSupportedLanguage) {\n      language = this.defaultLanguage;\n    }\n\n    log.debug(`Language set to ${language}`);\n    this.translateService.use(language);\n  }\n\n  /**\n   * Gets the current language.\n   * @return The current language code.\n   */\n  get language(): string {\n    return this.translateService.currentLang;\n  }\n}\n","export * from './i18n.module';\nexport * from './i18n.service';\nexport * from './language-selector.component';\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { I18nService } from './i18n.service';\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss'],\n})\nexport class LanguageSelectorComponent implements OnInit {\n  @Input() inNavbar = false;\n  @Input() menuClass = '';\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {}\n\n  setLanguage(language: string) {\n    this.i18nService.language = language;\n  }\n\n  get currentLanguage(): string {\n    return this.i18nService.language;\n  }\n\n  get languages(): string[] {\n    return this.i18nService.supportedLanguages;\n  }\n}\n","<div [ngClass]=\"{ 'nav-item': inNavbar }\" ngbDropdown>\n  <a\n    *ngIf=\"inNavbar; else button\"\n    id=\"language-dropdown\"\n    class=\"nav-link\"\n    ngbDropdownToggle\n  >\n    {{ currentLanguage | translate }}\n  </a>\n  <ng-template #button>\n    <button\n      id=\"language-dropdown\"\n      class=\"btn btn-sm btn-secondary\"\n      ngbDropdownToggle\n    >\n      {{ currentLanguage }}\n    </button>\n  </ng-template>\n  <div\n    ngbDropdownMenu\n    aria-labelledby=\"language-dropdown\"\n    [ngClass]=\"menuClass\"\n  >\n    <button\n      class=\"dropdown-item\"\n      *ngFor=\"let language of languages\"\n      (click)=\"setLanguage(language)\"\n    >\n      {{ language | translate }}\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Shell } from '@app/shell/shell.service';\nimport { QueryConstructionComponent } from './query-construction.component';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    {\n      path: 'dbtype/:dbType',\n      component: QueryConstructionComponent,\n      // data: { title: extract('Home') },\n    },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QueryConstructionRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { themeFromMapBox } from '../shell/shell.service';\nimport * as L from 'leaflet';\nimport { Options } from 'ng5-slider';\nimport * as _ from 'lodash';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QueryConstructionService } from './query-construction.service';\nimport { QuoteService } from '@app/home/quote.service';\nimport * as turf from '@turf/turf';\nimport { DbconnectionPopUpComponent } from '@app/home/dbconnection-pop-up/dbconnection-pop-up.component';\nimport { NotificationsService } from 'angular2-notifications';\n\n@Component({\n  selector: 'app-query-construction',\n  templateUrl: './query-construction.component.html',\n  styleUrls: ['./query-construction.component.scss'],\n})\nexport class QueryConstructionComponent implements OnInit {\n  query: string;\n\n  // queryToRunMongo: string =\n  //   'SELECT* FROM car WHERE GEO_RECTANGLE(location, [(13.263160139322283, 52.49997397893388),(13.306762129068376, 52.52113031608697)] )';\n  // queryToRunNeo4j: string =\n  //   \"SELECT* FROM car WHERE GEO_TEMPORAL_CIRCLE_KM(location, (13.285476118326189, 52.51026611136366), 1.5, date, '29/05/2007 12:00:00', '1/06/2007 12:00:00')\";\n  // queryToRunHbase: string =\n  //   'SELECT* FROM car WHERE GEO_CIRCLE_KM(location, (13.272429853677751, 52.509430292042886), 1)';\n  // queryToRunRedis: string =\n  //   'SELECT* FROM car WHERE GEO_CIRCLE_KM(location, (13.272429853677751, 52.509430292042886), 1)';\n\n  // mongoSQLQuery: string =\n  //   'SELECT* FROM car WHERE GEO_RECTANGLE(location, [(13.263160139322283, 52.49997397893388),(13.306762129068376, 52.52113031608697)] )';\n  // neo4jSQLQuery: string =\n  //   \"SELECT* FROM car WHERE GEO_TEMPORAL_CIRCLE_KM(location, (13.285476118326189, 52.51026611136366), 1.5, Timestamp, '29/05/2007 12:00:00', '1/06/2007 12:00:00')\";\n  // hbaseSQLQuery: string =\n  //   'SELECT* FROM car WHERE GEO_CIRCLE_KM(location, (13.272429853677751, 52.509430292042886), 1)';\n  // redisSQLQuery: string =\n  //   'SELECT* FROM car WHERE GEO_CIRCLE_KM(location, (13.272429853677751, 52.509430292042886), 1)';\n\n  // mongoActualQuery: string =\n  //   \"{'$match': {'$and': [{'location': {'$geoWithin': {'$geometry': {'type': 'Polygon', 'coordinates': [[[13.263160139322283, 52.49997397893388], [13.263160139322283, 52.52113031608697], [13.306762129068376, 52.52113031608697], [13.306762129068376, 52.49997397893388], [13.263160139322283, 52.49997397893388]]]}}}}, {'$or': [{'hilIndex': {'$in': [37893268]}}]}]}}, {'$limit': 10000}, {'$sample': {'size': 1000}}\";\n  // neo4jActualQuery: string =\n  //   \"'MATCH (s:car) WHERE s.STHilbertIndex = 8651829 WITH s WHERE distance(point({ srid :7203, x: 52.51026611136366 , y: 13.285476118326189 }), s.location) < 1.5 AND 1180429200000 < s.Timestamp < 1180483200000 WITH s RETURN *'\";\n  // hbaseActualQuery: string =\n  //   'FilterList AND (2/2): [FilterList AND (2/2): [PrefixFilter u336w, CircleFilter (location, longitude, latitude, (13.272429853677751 52.509430292042886),1)], FilterList OR (0/0): []]';\n  // redisActualQuery: string =\n  //   'FilterList AND (2/2): [FilterList AND (2/2): [PrefixFilter u336w, CircleFilter (location, longitude, latitude, (13.272429853677751 52.509430292042886),1)], FilterList OR (0/0): []]';\n\n  selectValue: string;\n  fromValue: string;\n  whereValue: string;\n\n  objectIdFieldName: string;\n  objectLocationFieldName: string;\n  objectTimeFieldName: string;\n  minTimestamp: string;\n  maxTimestamp: string;\n\n  radius?: number;\n  lat?: number;\n  lon?: number;\n  lat1?: number;\n  lon1?: number;\n\n  isLoading: boolean = false;\n\n  constructor(\n    private modal: NgbModal,\n    private quoteService: QuoteService,\n    private queryConstructionServ: QueryConstructionService,\n    private activeRoute: ActivatedRoute,\n    private router: Router,\n    private toast: NotificationsService\n  ) {}\n\n  chosenGeoSQLFunction: string = 'default';\n\n  activeDatabase: string;\n\n  changeFloor: boolean;\n  changeCeil: boolean;\n  fps: number;\n  addTime: number;\n  windowBetweenFloorAndCeil: number;\n  dbChangeConnectorLoading = false;\n\n  dataFromServer: string;\n  data: Array<any> = [];\n  groupedData: any;\n  idArray: Array<any> = [];\n\n  opt: Options = {\n    floor: 0,\n    ceil: 10,\n  };\n\n  activeArray: Array<any> = [];\n\n  value: number = 5;\n  maxValue: number = 8;\n\n  isDropDownOpen: boolean = false;\n  isQueryConstructorTabOpen: boolean = true;\n  isSQLqueryTabOpen: boolean = true;\n  isActualDBTabOpen: boolean = true;\n\n  drawItems: L.FeatureGroup = L.featureGroup();\n  actualQuery = 'Not available yet.';\n\n  drawOptions = {\n    edit: {\n      featureGroup: this.drawItems,\n    },\n    position: 'topleft',\n    draw: {\n      marker: false,\n      circle: {\n        shapeOptions: {\n          fillOpacity: 0.08,\n        },\n      },\n      rectangle: {\n        showArea: false,\n        shapeOptions: {\n          fillOpacity: 0.08,\n        },\n      }, // disable showArea\n      polyline: false,\n      polygon: false,\n      circlemarker: false,\n    },\n  };\n\n  dropDownProps = {\n    mongo: ['vehicle', 'car_type', 'hilIndex', 'location', 'date'],\n    neo4j: [\n      'car_Id',\n      'location',\n      'Timestamp',\n      'HilbertIndex',\n      'STHilbertIndex',\n    ],\n    hbase: ['cf:vehicle', 'location:date', 'location'],\n    redis: ['_id', 'localDate', 'location:longitude', 'location:latitude'],\n  };\n\n  map: L.Map;\n  layers: Array<any> = [];\n  options = {\n    layers: [L.tileLayer(themeFromMapBox, { maxZoom: 18, attribution: '...' })],\n    zoom: 14,\n    center: L.latLng(52.5067614, 13.2846506),\n  };\n\n  ngOnInit(): void {\n    this.isDropDownOpen = false;\n    this.dbChangeConnectorLoading = true;\n    this.fps = 0.2;\n    this.windowBetweenFloorAndCeil = 3;\n    this.changeFloor = false;\n    this.changeCeil = false;\n\n    this.activeRoute.paramMap.subscribe((params: any) => {\n      this.activeDatabase = params.get('dbType');\n    });\n\n    setTimeout(() => {\n      this.dbChangeConnectorLoading = false;\n    }, 1500);\n  }\n\n  openCloseQueryConstructorTab() {\n    this.isQueryConstructorTabOpen = !this.isQueryConstructorTabOpen;\n  }\n\n  openCloseSQLQueryTab() {\n    this.isSQLqueryTabOpen = !this.isSQLqueryTabOpen;\n  }\n\n  openCloseActualDBTab() {\n    this.isActualDBTabOpen = !this.isActualDBTabOpen;\n  }\n\n  goToOtherDb(db: string) {\n    this.router.navigate(['/visualization/dbtype/' + db]);\n\n    this.dbChangeConnectorLoading = true;\n    this.query = null;\n    this.actualQuery = 'Not available yet.';\n    this.objectIdFieldName = 'default';\n    this.objectLocationFieldName = 'default';\n    this.objectTimeFieldName = 'default';\n\n    this.layers.splice(0, this.layers.length - 1);\n\n    this.chosenGeoSQLFunction = 'default';\n\n    setTimeout(() => {\n      this.dbChangeConnectorLoading = false;\n    }, 2000);\n  }\n\n  openModalForDBConnection(db: string) {\n    if (\n      db === 'mongodb' ||\n      db === 'neo4j' ||\n      db === 'hbase' ||\n      db === 'redis'\n    ) {\n      const modalref = this.modal.open(DbconnectionPopUpComponent, {\n        windowClass: 'modalStyle',\n      });\n      modalref.componentInstance.db = db;\n    } else {\n      this.toast.error('Error', 'Please choose a database first to continue.');\n    }\n  }\n\n  changeStateOfDropDown() {\n    this.isDropDownOpen = !this.isDropDownOpen;\n  }\n\n  onDrawCreated(e: any) {\n    this.drawItems.addLayer((e as L.DrawEvents.Created).layer);\n  }\n\n  onMapReady(map: L.Map) {\n    this.map = map;\n\n    map.on(L.Draw.Event.CREATED, (e) => {\n      this.drawLogic(e);\n    });\n  }\n\n  drawLogic(e: any) {\n    const type = (e as any).layerType,\n      layer = (e as any).layer;\n\n    if (type === 'circle') {\n      var theCenterPt = layer.getLatLng();\n      var center = [theCenterPt.lng, theCenterPt.lat];\n      console.log(center);\n\n      var theRadius = layer.getRadius();\n\n      console.log('radius: ', theRadius, 'Center: ', theCenterPt.lat);\n      this.radius = theRadius;\n      this.lat = theCenterPt.lat;\n      this.lon = theCenterPt.lng;\n    }\n\n    if (type === 'rectangle') {\n      var rectanglePoints = layer.getLatLngs();\n      console.log(rectanglePoints);\n      this.lat = rectanglePoints[0][0].lat;\n      this.lon = rectanglePoints[0][0].lng;\n      this.lat1 = rectanglePoints[0][3].lat;\n      this.lon1 = rectanglePoints[0][3].lng;\n    }\n  }\n\n  runSpatialQuery() {\n    if (this.objectIdFieldName) {\n      if (this.objectLocationFieldName) {\n        if (this.lat && this.lon) {\n          this.isLoading = true;\n\n          if (this.chosenGeoSQLFunction === 'GEO_CIRCLE_KM') {\n            //'SELECT* FROM car WHERE GEO_CIRCLE_KM(location, (13.272429853677751, 52.509430292042886), 1)';\n            this.query =\n              'SELECT* FROM ' +\n              this.fromValue +\n              ' WHERE ' +\n              this.chosenGeoSQLFunction +\n              '(' +\n              this.objectLocationFieldName +\n              ', ( ' +\n              this.lon +\n              ', ' +\n              this.lat +\n              ' ), ' +\n              this.radius +\n              ' )';\n            console.log(this.query);\n          } else {\n            //'SELECT* FROM car WHERE GEO_RECTANGLE(location, [(13.263160139322283, 52.49997397893388),(13.306762129068376, 52.52113031608697)] )';\n            this.query =\n              'SELECT* FROM ' +\n              this.fromValue +\n              ' WHERE ' +\n              this.chosenGeoSQLFunction +\n              '( ' +\n              this.objectLocationFieldName +\n              ' ,[( ' +\n              this.lon +\n              ', ' +\n              this.lat +\n              ' ), ( ' +\n              this.lon1 +\n              ' , ' +\n              this.lat1 +\n              ' )])';\n            console.log(this.query);\n          }\n\n          this.queryConstructionServ\n            .spatialSqlQueryPost(this.query, 'vehicle', 'location')\n            .then((res) => {\n              this.query = this.query;\n              this.actualQuery = this.query;\n\n              console.log(res);\n              const data = JSON.parse(res);\n              if (data['status'] === 'ok') {\n                this.isLoading = false;\n                this.quoteService.updateData(res);\n                // Take data from serve from quoteService\n                this.dataFromServer = this.quoteService.getData();\n\n                console.log(\n                  'edwwwwwwwwwwwwwwwwwwwedwwwwwwwwwwwwwwwwwwwedwwwwwwwwwwwwwwwwwwwedwwwwwwwwwwwwwwwwwwwedwwwwwwwwwwwwwwwwwww',\n                  this.dataFromServer\n                );\n\n                let parsedData = JSON.parse(this.dataFromServer);\n                this.data = parsedData['data'];\n\n                this.groupedData = this.data;\n                console.log(\n                  'auta einai ta grouparismena data',\n                  this.groupedData\n                );\n                if (this.groupedData[0].id) {\n                  let o = Math.round;\n                  let r = Math.random;\n                  let s = 255;\n                  this.data.forEach((element) => {\n                    let index = this.idArray.findIndex(\n                      (id) => id.id === element.id\n                    );\n\n                    if (index === -1) {\n                      this.idArray.push({\n                        id: element.id,\n                        color:\n                          'rgb(' +\n                          o(r() * s) +\n                          ',' +\n                          o(r() * s) +\n                          ',' +\n                          o(r() * s) +\n                          ')',\n                      });\n                    }\n                  });\n\n                  // this.createActiveArray()\n\n                  console.log(' auto einai to id array: ', this.idArray);\n\n                  this.spatialVisualization();\n                } else {\n                  this.toast.error('Error', 'Something went bad!');\n                }\n              }\n            })\n            .catch((err) => {\n              this.isLoading = false;\n              console.log(err);\n            });\n        } else {\n          this.toast.error('You have to draw on map the limits of the query!');\n        }\n      } else {\n        this.toast.error('Location field must have a value!');\n      }\n    } else {\n      this.toast.error('ID field must have a value!');\n    }\n  }\n\n  runSpatioTemporalQuery() {\n    if (this.objectIdFieldName) {\n      if (this.objectLocationFieldName) {\n        if (\n          this.objectTimeFieldName &&\n          this.minTimestamp &&\n          this.maxTimestamp\n        ) {\n          if (this.lat && this.lon) {\n            if (this.chosenGeoSQLFunction === 'GEO_TEMPORAL_CIRCLE_KM') {\n              // \"SELECT* FROM car WHERE GEO_TEMPORAL_CIRCLE_KM(location, (13.285476118326189, 52.51026611136366), 1.5, date, '29/05/2007 12:00:00', '1/06/2007 12:00:00')\";\n              this.query =\n                'SELECT* FROM ' +\n                this.fromValue +\n                ' WHERE ' +\n                this.chosenGeoSQLFunction +\n                '( ' +\n                this.objectLocationFieldName +\n                ' , ( ' +\n                this.lon +\n                ' ,' +\n                this.lat +\n                ' ), ' +\n                this.radius +\n                ' , ' +\n                this.objectTimeFieldName +\n                ' , ' +\n                this.minTimestamp +\n                ' , ' +\n                this.maxTimestamp +\n                ' )';\n              console.log(this.query);\n            } else {\n              this.query =\n                'SELECT* FROM ' +\n                this.fromValue +\n                ' WHERE ' +\n                this.chosenGeoSQLFunction +\n                '( ' +\n                this.objectLocationFieldName +\n                ' ,[( ' +\n                this.lon +\n                ' , ' +\n                this.lat +\n                ' ) ,( ' +\n                this.lon1 +\n                ' , ' +\n                this.lat1 +\n                ' )], ' +\n                this.objectTimeFieldName +\n                ' , ' +\n                this.minTimestamp +\n                ' , ' +\n                this.maxTimestamp +\n                ' )';\n              console.log(this.query);\n            }\n\n            this.isLoading = true;\n            this.queryConstructionServ\n              .spatioTemporalSqlQueryPost(\n                this.query,\n                'vehicle',\n                'location',\n                'date'\n              )\n              .then((res) => {\n                console.log(res);\n                const data = JSON.parse(res);\n                if (data['status'] === 'ok') {\n                  this.isLoading = false;\n                  this.query = this.query;\n                  this.actualQuery = this.query;\n                  this.quoteService.updateData(res);\n                  // Take data from serve from quoteService\n                  this.dataFromServer = this.quoteService.getData();\n\n                  console.log(\n                    'edwwwwwwwwwwwwwwwwwwwedwwwwwwwwwwwwwwwwwwwedwwwwwwwwwwwwwwwwwwwedwwwwwwwwwwwwwwwwwwwedwwwwwwwwwwwwwwwwwww',\n                    this.dataFromServer\n                  );\n                  let parsedData = JSON.parse(this.dataFromServer);\n                  this.data = parsedData['data'];\n\n                  // JS Date needs milli Epoch Timestamp (so below is a milli epoch converter)\n                  console.log(\n                    this.data,\n                    'ayto einai ena date: ' +\n                      new Date(\n                        parseInt(\n                          this.timestampManipulation(this.data[0]['time'])\n                        )\n                      )\n                  );\n\n                  this.opt = {\n                    floor: parseInt(\n                      this.timestampManipulation(this.data[0]['time'])\n                    ),\n                    ceil: parseInt(\n                      this.timestampManipulation(\n                        this.data[this.data.length - 1]['time']\n                      )\n                    ),\n                  };\n\n                  console.log('floor', this.opt.floor, 'ceil', this.opt.ceil);\n\n                  this.value = this.opt.floor;\n                  this.maxValue =\n                    this.opt.floor +\n                    this.windowBetweenFloorAndCeil * 60 * 60 * 1000;\n\n                  this.groupedData = _.groupBy(this.data, 'time');\n                  console.log(\n                    'auta einai ta grouparismena data',\n                    this.groupedData\n                  );\n\n                  // for (let key in this.groupedData) {\n                  //   this.opt.ticksArray.push(parseInt(this.timestampManipulation(key)));\n                  // }\n\n                  // console.log('ticksArray: ', this.opt.ticksArray);\n\n                  let o = Math.round;\n                  let r = Math.random;\n                  let s = 255;\n                  this.data.forEach((element) => {\n                    let index = this.idArray.findIndex(\n                      (id) => id.id === element.id\n                    );\n\n                    if (index === -1) {\n                      this.idArray.push({\n                        id: element.id,\n                        color:\n                          'rgb(' +\n                          o(r() * s) +\n                          ',' +\n                          o(r() * s) +\n                          ',' +\n                          o(r() * s) +\n                          ')',\n                      });\n                    }\n                  });\n\n                  // this.createActiveArray()\n\n                  console.log(' auto einai to id array: ', this.idArray);\n                  this.playSpatioTemporal();\n                } else {\n                  this.toast.error('Error', 'Something went bad!');\n                }\n              })\n              .catch((err) => {\n                this.isLoading = false;\n                console.log(err);\n              });\n          } else {\n            this.toast.error(\n              'You have to draw on map the limits of the query!'\n            );\n          }\n        } else {\n          this.toast.error(\n            'Time field must have a value and mix/max timestamp also!'\n          );\n        }\n      } else {\n        this.toast.error('Location field must have a value!');\n      }\n    } else {\n      this.toast.error('ID field must have a value!');\n    }\n  }\n\n  timestampManipulation(time: any) {\n    let manipulatedTime;\n\n    if (time.length === 13) {\n      manipulatedTime = time;\n    }\n    if (time.length < 13) {\n      manipulatedTime = parseInt((time += '000'));\n    }\n    if (time.length > 13) {\n      manipulatedTime = new Date(time).getTime();\n    }\n\n    return manipulatedTime;\n  }\n\n  changeFloorOrCeil(type: string) {\n    if (type === 'floor') {\n      this.changeFloor = !this.changeFloor;\n      console.log(this.opt.floor);\n    }\n    if (type === 'ceil') {\n      this.changeCeil = !this.changeCeil;\n      console.log(this.opt.ceil);\n    }\n  }\n\n  getRGBofPin(id: string) {\n    const index = this.idArray.findIndex((el) => el.id === id);\n    return this.idArray[index].color;\n  }\n\n  spatialVisualization() {\n    const myRenderer = L.canvas({\n      padding: 0.01,\n    });\n\n    this.groupedData.forEach((position: any) => {\n      const lat = position.lat;\n      const lon = position.lon;\n      if (position.id) {\n        let myIcon = L.divIcon({\n          html:\n            '<div style=\"background-color: ' +\n            this.getRGBofPin(position.id) +\n            ' ; height: 10px; width: 10px; border-radius: 100%;\"></div>',\n        });\n\n        this.layers.push(\n          L.circleMarker([lat, lon], {\n            renderer: myRenderer,\n            color: this.getRGBofPin(position.id),\n            fillColor: this.getRGBofPin(position.id),\n            fill: true,\n            weight: 0.2,\n            stroke: false,\n            fillOpacity: 1,\n          })\n          // .bindPopup(\n          //   `<div>CraftID: ` +\n          //     craftID +\n          //     `</div>` +\n          //     `<div>TimeStamp: ` +\n          //     TimeStamp +\n          //     `</div>` +\n          //     `<div>Speed: ` +\n          //     Speed +\n          //     `</div>`\n          // )\n        );\n      } else {\n        let myIcon = L.divIcon({\n          html:\n            '<div style=\"background-color: green; height: 10px; width: 10px; border-radius: 100%;\"></div>',\n        });\n\n        this.layers.push(\n          L.circleMarker([lat, lon], {\n            renderer: myRenderer,\n            color: '#228B22',\n            fillColor: '#228B22',\n            fill: true,\n            weight: 0.2,\n            stroke: false,\n            fillOpacity: 1,\n          })\n          // .bindPopup(\n          //   `<div>CraftID: ` +\n          //     craftID +\n          //     `</div>` +\n          //     `<div>TimeStamp: ` +\n          //     TimeStamp +\n          //     `</div>` +\n          //     `<div>Speed: ` +\n          //     Speed +\n          //     `</div>`\n          // )\n        );\n\n        this.layers.push(\n          L.circleMarker([lat, lon], {\n            renderer: myRenderer,\n            color: '#228B22',\n            fillColor: '#228B22',\n            fill: true,\n            weight: 0.2,\n            stroke: false,\n            fillOpacity: 1,\n          })\n          // .bindPopup(\n          //   `<div>CraftID: ` +\n          //     craftID +\n          //     `</div>` +\n          //     `<div>TimeStamp: ` +\n          //     TimeStamp +\n          //     `</div>` +\n          //     `<div>Speed: ` +\n          //     Speed +\n          //     `</div>`\n          // )\n        );\n      }\n    });\n  }\n\n  playSpatioTemporal() {\n    // this.value = this.opt.floor;\n    this.maxValue =\n      this.opt.floor + this.windowBetweenFloorAndCeil * 60 * 60 * 1000;\n    let i = 0;\n\n    // for (let key in this.groupedData) {\n    for (let key in this.groupedData) {\n      console.log('eimai akrivos apekso!');\n\n      i++;\n      setTimeout(() => {\n        if (parseInt(this.timestampManipulation(key)) > this.opt.floor) {\n          this.groupedData[key].forEach((element: any) => {\n            const lat = element.lat;\n            const lon = element.lon;\n            const time = element.time;\n            let myIcon = L.divIcon({\n              html:\n                '<div style=\"background-color: ' +\n                this.getRGBofPin(element.id) +\n                ' ; height: 10px; width: 10px; border-radius: 100%;\"></div>',\n            });\n\n            // this.layers = [];\n            const myRenderer = L.canvas({\n              padding: 0.5,\n            });\n\n            this.layers.push(\n              // L.circleMarker([lat, lon], {\n              //   renderer: myRenderer,\n              //   color: this.getRGBofPin(element.id),\n              //   fillColor: this.getRGBofPin(element.id),\n              //   fill: true,\n              //   stroke: false,\n              //   fillOpacity: 1,\n              // })\n              L.marker([lat, lon], {\n                icon: myIcon,\n              })\n              // .bindPopup(\n              //   `<div>CraftID: ` +\n              //     craftID +\n              //     `</div>` +\n              //     `<div>TimeStamp: ` +\n              //     TimeStamp +\n              //     `</div>` +\n              //     `<div>Speed: ` +\n              //     Speed +\n              //     `</div>`\n              // )\n            );\n            // this.value = parseInt(this.timestampManipulation(time));\n            // this.maxValue = this.value + this.windowBetweenFloorAndCeil * 60 * 60 * 1000;\n            // this.map.panTo(new L.LatLng(lat, lon));\n          });\n        }\n        this.value = parseInt(this.timestampManipulation(key));\n        this.maxValue =\n          this.value + this.windowBetweenFloorAndCeil * 60 * 60 * 1000;\n\n        if (this.layers.length >= 250) {\n          this.layers.splice(0, 30);\n        }\n        // console.log(\"auta einai ta layers\", this.layers);\n      }, i * (this.fps * 1000));\n    }\n  }\n}\n","<div\n  class=\"container-fluid p-0\"\n  style=\"min-height: 100vh; max-height: 100vh; min-width: 100vw;\"\n>\n  <div class=\"row w-100 m-0\">\n    <!-- sidebar -->\n    <div\n      class=\"col-2 p-0\"\n      style=\"\n        min-height: 100vh;\n        max-height: 100vh;\n        border-right: 3px solid #14274e;\n      \"\n    >\n      <!-- header Of sidebar -->\n      <div\n        class=\"row w-100 m-0 d-flex justify-content-center align-items-center pointerToClick\"\n        (click)=\"changeStateOfDropDown()\"\n        style=\"height: 6rem; border-bottom: 3px solid #14274e;\"\n      >\n        <div class=\"col-auto align-self-center\">\n          <img\n            *ngIf=\"activeDatabase === 'neo4j'\"\n            src=\"assets/neo4j_logo.png\"\n            class=\"img-fluid\"\n            style=\"width: 8rem;\"\n          />\n          <img\n            *ngIf=\"activeDatabase === 'mongodb'\"\n            src=\"assets/MongoDB-Logo.png\"\n            class=\"img-fluid\"\n            style=\"width: 9rem; margin-top: -0.3rem !important;\"\n          />\n          <img\n            *ngIf=\"activeDatabase === 'hbase'\"\n            src=\"assets/hbase1.png\"\n            class=\"img-fluid\"\n            style=\"width: 8rem;\"\n          />\n          <img\n            *ngIf=\"activeDatabase === 'redis'\"\n            src=\"assets/Redis_Logo.svg\"\n            class=\"img-fluid\"\n            style=\"width: 8rem;\"\n          />\n        </div>\n        <div class=\"col-auto align-self-center\">\n          <i\n            *ngIf=\"!isDropDownOpen\"\n            style=\"font-size: 1.2rem; margin-top: 0.4rem;\"\n            class=\"fas fa-angle-down\"\n          ></i>\n          <i\n            *ngIf=\"isDropDownOpen\"\n            style=\"font-size: 1.2rem; margin-top: 1.2rem;\"\n            class=\"fas fa-angle-up\"\n          ></i>\n          <!-- dropdown to change db -->\n          <div\n            *ngIf=\"isDropDownOpen\"\n            class=\"row m-0 d-flex justify-content-center align-items-center pointerToClick mt-3\"\n          >\n            <div\n              *ngIf=\"activeDatabase === 'mongodb'\"\n              class=\"col-12 p-0 bg-white openRowToChooseDB p-2\"\n            >\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('neo4j')\"\n              >\n                <img\n                  src=\"assets/neo4j_logo.png\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('hbase')\"\n              >\n                <img\n                  src=\"assets/hbase1.png\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('redis')\"\n              >\n                <img\n                  src=\"assets/Redis_Logo.svg\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n            </div>\n            <div\n              *ngIf=\"activeDatabase === 'neo4j'\"\n              class=\"col-12 p-0 bg-white openRowToChooseDB p-2\"\n            >\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('mongodb')\"\n              >\n                <img\n                  src=\"assets/MongoDB-Logo.png\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('hbase')\"\n              >\n                <img\n                  src=\"assets/hbase1.png\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('redis')\"\n              >\n                <img\n                  src=\"assets/Redis_Logo.svg\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n            </div>\n            <div\n              *ngIf=\"activeDatabase === 'hbase'\"\n              class=\"col-12 p-0 bg-white openRowToChooseDB p-2\"\n            >\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('mongodb')\"\n              >\n                <img\n                  src=\"assets/MongoDB-Logo.png\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('neo4j')\"\n              >\n                <img\n                  src=\"assets/neo4j_logo.png\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('redis')\"\n              >\n                <img\n                  src=\"assets/Redis_Logo.svg\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n            </div>\n            <div\n              *ngIf=\"activeDatabase === 'redis'\"\n              class=\"col-12 p-0 bg-white openRowToChooseDB p-2\"\n            >\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('mongodb')\"\n              >\n                <img\n                  src=\"assets/MongoDB-Logo.png\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('neo4j')\"\n              >\n                <img\n                  src=\"assets/neo4j_logo.png\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n              <div\n                class=\"row w-100 m-0 p-2 rowToChoose\"\n                (click)=\"openModalForDBConnection('hbase')\"\n              >\n                <img\n                  src=\"assets/hbase1.png\"\n                  class=\"img-fluid\"\n                  style=\"width: 6rem;\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row w-100 m-0\" style=\"position: absolute; top: 4rem;\">\n          <div class=\"col-12 text-right pr-1\">\n            <div class=\"badge badge-success\" *ngIf=\"!dbChangeConnectorLoading\">\n              Connected\n            </div>\n            <div\n              class=\"badge badge-warning text-white\"\n              *ngIf=\"dbChangeConnectorLoading\"\n            >\n              Connecting\n              <i\n                style=\"font-size: 0.6rem;\"\n                class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"\n              ></i>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Sidebar contents per RDBMS -->\n      <div class=\"row w-100 m-0 pt-3 pb-3\">\n        <!-- mongodb structure -->\n        <div\n          class=\"col-12\"\n          *ngIf=\"activeDatabase === 'mongodb' && !dbChangeConnectorLoading\"\n        >\n          <div\n            class=\"row w-100 m-0 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            DBs\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div class=\"col-auto m-1 schemaStyle\">\n              SpatioTemporal_DB\n            </div>\n          </div>\n          <div\n            class=\"row w-100 m-0 pt-5 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Collections\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div class=\"col-auto m-1 schemaStyle\">\n              car\n            </div>\n          </div>\n          <div\n            class=\"row w-100 m-0 pt-5 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Keys\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div\n              *ngFor=\"let mongoProp of dropDownProps.mongo\"\n              class=\"col-auto m-1 schemaStyle\"\n            >\n              {{ mongoProp }}\n            </div>\n          </div>\n        </div>\n\n        <!-- neo4j structure -->\n        <div\n          class=\"col-12\"\n          *ngIf=\"activeDatabase === 'neo4j' && !dbChangeConnectorLoading\"\n        >\n          <div\n            class=\"row w-100 m-0 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Nodes - Labels\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div class=\"col-auto m-1 schemaStyle\">\n              2.965.074\n            </div>\n            <div class=\"col-auto m-1 schemaStyle\">\n              car\n            </div>\n          </div>\n          <div\n            class=\"row w-100 m-0 pt-5 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Relationship Types\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            There are no relationships yet\n          </div>\n          <div\n            class=\"row w-100 m-0 pt-5 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Property Keys\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div\n              *ngFor=\"let neo4jProp of dropDownProps.neo4j\"\n              class=\"col-auto m-1 schemaStyle\"\n            >\n              {{ neo4jProp }}\n            </div>\n          </div>\n        </div>\n\n        <!-- hbase structure -->\n        <div\n          class=\"col-12\"\n          *ngIf=\"activeDatabase === 'hbase' && !dbChangeConnectorLoading\"\n        >\n          <div\n            class=\"row w-100 m-0 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Table\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div class=\"col-auto m-1 schemaStyle\">\n              car\n            </div>\n          </div>\n          <div\n            class=\"row w-100 m-0 pt-5 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Rows\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div class=\"col-auto m-1 schemaStyle\">\n              2.965.074\n            </div>\n          </div>\n          <div\n            class=\"row w-100 m-0 pt-5 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Columns\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div class=\"col-auto m-1 schemaStyle\">\n              Row\n            </div>\n            <div\n              *ngFor=\"let hbaseProp of dropDownProps.hbase\"\n              class=\"col-auto m-1 schemaStyle\"\n            >\n              {{ hbaseProp }}\n            </div>\n          </div>\n        </div>\n\n        <!-- redis structure -->\n        <div\n          class=\"col-12\"\n          *ngIf=\"activeDatabase === 'redis' && !dbChangeConnectorLoading\"\n        >\n          <div\n            class=\"row w-100 m-0 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Database\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div class=\"col-auto m-1 schemaStyle\">\n              car\n            </div>\n          </div>\n          <div\n            class=\"row w-100 m-0 pt-5 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Data\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div class=\"col-auto m-1 schemaStyle\">\n              2.965.074\n            </div>\n          </div>\n          <div\n            class=\"row w-100 m-0 pt-5 pb-2\"\n            style=\"color: #14274e; font-weight: 600; font-size: 1.2rem;\"\n          >\n            Keys\n          </div>\n          <div class=\"row w-100 m-0 pt-2 pb-2\">\n            <div\n              *ngFor=\"let redisProp of dropDownProps.redis\"\n              class=\"col-auto m-1 schemaStyle\"\n            >\n              {{ redisProp }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- main -->\n    <div class=\"col-10 p-0\" style=\"min-height: 100vh; max-height: 100vh;\">\n      <div class=\"row w-100 m-0\">\n        <!-- Main content and query builders -->\n        <div\n          class=\"col-6 pt-4 pb-5\"\n          style=\"\n            min-height: 100vh;\n            max-height: 100vh;\n            overflow-y: auto !important;\n          \"\n        >\n          <div class=\"row w-100 m-0\">\n            <!-- Create query for visualization - TAB -->\n            <div class=\"col-12 box\">\n              <div\n                class=\"row w-100 m-0 pointerToClick pt-3 pb-3\"\n                (click)=\"openCloseQueryConstructorTab()\"\n              >\n                <div class=\"col-auto align-self-center\">\n                  <span\n                    style=\"\n                      color: #14274e;\n                      font-weight: 600;\n                      font-size: 1.2rem;\n                      text-decoration: underline;\n                    \"\n                    >Create query for visualization</span\n                  >\n                </div>\n                <div class=\"col text-right align-self-center\">\n                  <i\n                    *ngIf=\"!isQueryConstructorTabOpen\"\n                    style=\"font-size: 1.2rem;\"\n                    class=\"fas fa-angle-down mt-2\"\n                  ></i>\n                  <i\n                    *ngIf=\"isQueryConstructorTabOpen\"\n                    style=\"font-size: 1.2rem;\"\n                    class=\"fas fa-angle-up mt-2\"\n                  ></i>\n                </div>\n              </div>\n\n              <div\n                class=\"row w-100 m-0 pt-3 pb-3\"\n                *ngIf=\"isQueryConstructorTabOpen\"\n              >\n                <!-- SELECT -->\n                <div\n                  class=\"col-12 d-flex flex-nowrap\"\n                  style=\"overflow-x: auto;\"\n                >\n                  <select class=\"selectStyle p-2\">\n                    <option value=\"SELECT\">SELECT</option>\n                  </select>\n                  <select\n                    class=\"selectStyle ml-2 p-2\"\n                    *ngIf=\"activeDatabase === 'neo4j'\"\n                  >\n                    <option value=\"default\" disabled></option>\n                    <option value=\"*\">*</option>\n                    <option\n                      *ngFor=\"let neo4jProp of dropDownProps.neo4j\"\n                      value=\"{{ neo4jProp }}\"\n                      >{{ neo4jProp }}\n                    </option>\n                  </select>\n                  <select\n                    class=\"selectStyle ml-2 p-2\"\n                    *ngIf=\"activeDatabase === 'mongodb'\"\n                  >\n                    <option value=\"default\" disabled></option>\n                    <option value=\"*\">*</option>\n                    <option\n                      *ngFor=\"let mongoProp of dropDownProps.mongo\"\n                      value=\"{{ mongoProp }}\"\n                      >{{ mongoProp }}\n                    </option>\n                  </select>\n                  <select\n                    class=\"selectStyle ml-2 p-2\"\n                    *ngIf=\"activeDatabase === 'hbase'\"\n                  >\n                    <option value=\"default\" disabled></option>\n                    <option value=\"*\">*</option>\n                    <option\n                      *ngFor=\"let hbaseProp of dropDownProps.hbase\"\n                      value=\"{{ hbaseProp }}\"\n                      >{{ hbaseProp }}\n                    </option>\n                  </select>\n                  <select\n                    class=\"selectStyle ml-2 p-2\"\n                    *ngIf=\"activeDatabase === 'redis'\"\n                  >\n                    <option value=\"default\" disabled></option>\n                    <option value=\"*\">*</option>\n                    <option\n                      *ngFor=\"let redisProp of dropDownProps.redis\"\n                      value=\"{{ redisProp }}\"\n                      >{{ redisProp }}\n                    </option>\n                  </select>\n                  <button class=\"btn btn-link ml-2\">\n                    <i class=\"fas fa-plus\" style=\"color: #14274e;\"></i>\n                  </button>\n                </div>\n\n                <!-- FROM -->\n                <div\n                  class=\"col-12 mt-3 d-flex flex-nowrap\"\n                  style=\"overflow-x: auto;\"\n                >\n                  <select class=\"selectStyle p-2\">\n                    <option value=\"FROM\">FROM</option>\n                  </select>\n                  <select class=\"selectStyle ml-2 p-2\" [(ngModel)]=\"fromValue\">\n                    <option\n                      *ngIf=\"activeDatabase === 'neo4j'\"\n                      value=\"car\"\n                      >car</option\n                    >\n                    <option\n                      *ngIf=\"activeDatabase === 'mongodb'\"\n                      value=\"car\"\n                      >car</option\n                    >\n                    <option\n                    *ngIf=\"activeDatabase === 'mongodb'\"\n                    value=\"passengerCars\"\n                    >passengerCars</option\n                  >\n                    <option\n                      *ngIf=\"activeDatabase === 'hbase'\"\n                      value=\"car\"\n                      >car</option\n                    >\n                    <option\n                      *ngIf=\"activeDatabase === 'redis'\"\n                      value=\"car\"\n                      >car</option\n                    >\n                  </select>\n                  <button class=\"btn btn-link ml-2\">\n                    <i class=\"fas fa-plus\" style=\"color: #14274e;\"></i>\n                  </button>\n                </div>\n\n                <!-- WHERE -->\n                <div\n                  class=\"col-12 mt-3 d-flex flex-nowrap\"\n                  style=\"overflow-x: auto;\"\n                >\n                  <select class=\"selectStyle p-2\">\n                    <option value=\"WHERE\">WHERE</option>\n                  </select>\n                  <select\n                    class=\"selectStyle ml-2 p-2\"\n                    [(ngModel)]=\"chosenGeoSQLFunction\"\n                  >\n                    <option value=\"default\" disabled></option>\n                    <option value=\"GEO_RECTANGLE\">GEO_RECTANGLE</option>\n                    <option value=\"GEO_TEMPORAL_RECTANGLE\"\n                      >GEO_TEMPORAL_RECTANGLE</option\n                    >\n                    <option value=\"GEO_CIRCLE_KM\">GEO_CIRCLE_KM</option>\n                    <option value=\"GEO_TEMPORAL_CIRCLE_KM\"\n                      >GEO_TEMPORAL_CIRCLE_KM</option\n                    >\n                  </select>\n                  <button class=\"btn btn-link ml-2\">\n                    <i class=\"fas fa-plus\" style=\"color: #14274e;\"></i>\n                  </button>\n                </div>\n\n                <!-- Id field -->\n                <div\n                  class=\"col-12 mt-3 d-flex flex-nowrap\"\n                  style=\"overflow-x: auto;\"\n                >\n                  <div class=\"whiteSpace p-2\"></div>\n                  <div\n                    class=\"row m-0\"\n                    *ngIf=\"\n                      chosenGeoSQLFunction === 'GEO_TEMPORAL_CIRCLE_KM' ||\n                      chosenGeoSQLFunction === 'GEO_TEMPORAL_RECTANGLE' ||\n                      chosenGeoSQLFunction === 'GEO_CIRCLE_KM' ||\n                      chosenGeoSQLFunction === 'GEO_RECTANGLE'\n                    \"\n                  >\n                    <div class=\"col-auto\" style=\"font-size: 0.9rem;\">\n                      <div class=\"row w-100 m-0\">\n                        ID Field\n                        <span\n                          class=\"ml-2\"\n                          *ngIf=\"\n                            chosenGeoSQLFunction === 'GEO_CIRCLE_KM' ||\n                            chosenGeoSQLFunction === 'GEO_RECTANGLE'\n                          \"\n                          style=\"font-size: 0.7rem;\"\n                          >(Optional)</span\n                        >\n                      </div>\n                      <div class=\"row w-100\">\n                        <select\n                          class=\"selectStyle ml-2 p-2\"\n                          *ngIf=\"activeDatabase === 'neo4j'\"\n                          [(ngModel)]=\"objectIdFieldName\"\n                        >\n                          <option\n                            *ngFor=\"let neo4jProp of dropDownProps.neo4j\"\n                            value=\"{{ neo4jProp }}\"\n                            >{{ neo4jProp }}\n                          </option>\n                        </select>\n                        <select\n                          class=\"selectStyle ml-2 p-2\"\n                          *ngIf=\"activeDatabase === 'mongodb'\"\n                          [(ngModel)]=\"objectIdFieldName\"\n                        >\n                          <option\n                            *ngFor=\"let mongoProp of dropDownProps.mongo\"\n                            value=\"{{ mongoProp }}\"\n                            >{{ mongoProp }}\n                          </option>\n                        </select>\n                        <select\n                          class=\"selectStyle ml-2 p-2\"\n                          *ngIf=\"activeDatabase === 'hbase'\"\n                          [(ngModel)]=\"objectIdFieldName\"\n                        >\n                          <option\n                            *ngFor=\"let hbaseProp of dropDownProps.hbase\"\n                            value=\"{{ hbaseProp }}\"\n                            >{{ hbaseProp }}\n                          </option>\n                        </select>\n                        <select\n                          class=\"selectStyle ml-2 p-2\"\n                          *ngIf=\"activeDatabase === 'redis'\"\n                          [(ngModel)]=\"objectIdFieldName\"\n                        >\n                          <option\n                            *ngFor=\"let redisProp of dropDownProps.redis\"\n                            value=\"{{ redisProp }}\"\n                            >{{ redisProp }}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- Location field -->\n                <div\n                  class=\"col-12 mt-3 d-flex flex-nowrap\"\n                  style=\"overflow-x: auto;\"\n                >\n                  <div class=\"whiteSpace p-2\"></div>\n                  <div\n                    class=\"row m-0\"\n                    *ngIf=\"chosenGeoSQLFunction !== 'default'\"\n                  >\n                    <div class=\"col-12\" style=\"font-size: 0.9rem;\">\n                      Location Field\n                    </div>\n                    <div class=\"col-auto pl-0\">\n                      <select\n                        class=\"selectStyle ml-2 p-2\"\n                        *ngIf=\"activeDatabase === 'neo4j'\"\n                        [(ngModel)]=\"objectLocationFieldName\"\n                      >\n                        <option\n                          *ngFor=\"let neo4jProp of dropDownProps.neo4j\"\n                          value=\"{{ neo4jProp }}\"\n                          >{{ neo4jProp }}\n                        </option>\n                      </select>\n                      <select\n                        class=\"selectStyle ml-2 p-2\"\n                        *ngIf=\"activeDatabase === 'mongodb'\"\n                        [(ngModel)]=\"objectLocationFieldName\"\n                      >\n                        <option\n                          *ngFor=\"let mongoProp of dropDownProps.mongo\"\n                          value=\"{{ mongoProp }}\"\n                          >{{ mongoProp }}\n                        </option>\n                      </select>\n                      <select\n                        class=\"selectStyle ml-2 p-2\"\n                        *ngIf=\"activeDatabase === 'hbase'\"\n                        [(ngModel)]=\"objectLocationFieldName\"\n                      >\n                        <option\n                          *ngFor=\"let hbaseProp of dropDownProps.hbase\"\n                          value=\"{{ hbaseProp }}\"\n                          >{{ hbaseProp }}\n                        </option>\n                      </select>\n                      <select\n                        class=\"selectStyle ml-2 p-2\"\n                        *ngIf=\"activeDatabase === 'redis'\"\n                        [(ngModel)]=\"objectLocationFieldName\"\n                      >\n                        <option\n                          *ngFor=\"let redisProp of dropDownProps.redis\"\n                          value=\"{{ redisProp }}\"\n                          >{{ redisProp }}\n                        </option>\n                      </select>\n                    </div>\n                    <div\n                      class=\"col pl-0 align-self-center\"\n                      *ngIf=\"\n                        chosenGeoSQLFunction === 'GEO_RECTANGLE' ||\n                        chosenGeoSQLFunction === 'GEO_TEMPORAL_RECTANGLE'\n                      \"\n                      style=\"color: grey;\"\n                    >\n                      Draw rectangle on map\n                    </div>\n                    <div\n                      class=\"col pl-0 align-self-center\"\n                      *ngIf=\"\n                        chosenGeoSQLFunction === 'GEO_CIRCLE_KM' ||\n                        chosenGeoSQLFunction === 'GEO_TEMPORAL_CIRCLE_KM'\n                      \"\n                      style=\"color: grey;\"\n                    >\n                      Draw circle on map\n                    </div>\n                  </div>\n                </div>\n                <!-- Time field -->\n                <div\n                  class=\"col-12 mt-3 d-flex flex-nowrap\"\n                  style=\"overflow-x: auto;\"\n                >\n                  <div class=\"whiteSpace p-2\"></div>\n                  <div\n                    class=\"row m-0\"\n                    *ngIf=\"\n                      chosenGeoSQLFunction === 'GEO_TEMPORAL_CIRCLE_KM' ||\n                      chosenGeoSQLFunction === 'GEO_TEMPORAL_RECTANGLE'\n                    \"\n                  >\n                    <div class=\"col-auto\" style=\"font-size: 0.9rem;\">\n                      <div class=\"row w-100 m-0\">\n                        Timestamp Field\n                      </div>\n                      <div class=\"row w-100\">\n                        <select\n                          class=\"selectStyle ml-2 p-2\"\n                          *ngIf=\"activeDatabase === 'neo4j'\"\n                          [(ngModel)]=\"objectTimeFieldName\"\n                        >\n                          <option\n                            *ngFor=\"let neo4jProp of dropDownProps.neo4j\"\n                            value=\"{{ neo4jProp }}\"\n                            >{{ neo4jProp }}\n                          </option>\n                        </select>\n                        <select\n                          class=\"selectStyle ml-2 p-2\"\n                          *ngIf=\"activeDatabase === 'mongodb'\"\n                          [(ngModel)]=\"objectTimeFieldName\"\n                        >\n                          <option\n                            *ngFor=\"let mongoProp of dropDownProps.mongo\"\n                            value=\"{{ mongoProp }}\"\n                            >{{ mongoProp }}\n                          </option>\n                        </select>\n                        <select\n                          class=\"selectStyle ml-2 p-2\"\n                          *ngIf=\"activeDatabase === 'hbase'\"\n                          [(ngModel)]=\"objectTimeFieldName\"\n                        >\n                          <option\n                            *ngFor=\"let hbaseProp of dropDownProps.hbase\"\n                            value=\"{{ hbaseProp }}\"\n                            >{{ hbaseProp }}\n                          </option>\n                        </select>\n                        <select\n                          class=\"selectStyle ml-2 p-2\"\n                          *ngIf=\"activeDatabase === 'redis'\"\n                          [(ngModel)]=\"objectTimeFieldName\"\n                        >\n                          <option\n                            *ngFor=\"let redisProp of dropDownProps.redis\"\n                            value=\"{{ redisProp }}\"\n                            >{{ redisProp }}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                    <div class=\"col-auto\" style=\"font-size: 0.9rem;\">\n                      <div class=\"row w-100 m-0\">\n                        minTimestamp\n                      </div>\n                      <div class=\"row w-100\">\n                        <input\n                          [(ngModel)]=\"minTimestamp\"\n                          class=\"inputStyle ml-2 p-2\"\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-auto\" style=\"font-size: 0.9rem;\">\n                      <div class=\"row w-100 m-0\">\n                        maxTimestamp\n                      </div>\n                      <div class=\"row w-100\">\n                        <input\n                          [(ngModel)]=\"maxTimestamp\"\n                          class=\"inputStyle ml-2 p-2\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row w-100 m-0 pb-3\" *ngIf=\"isQueryConstructorTabOpen\">\n                <div class=\"col-auto align-self-center\">\n                  <button\n                    class=\"btn btn-link\"\n                    style=\"color: #14274e; font-weight: 300;\"\n                  >\n                    Add SQL line +\n                  </button>\n                </div>\n                <div class=\"col text-right align-self-center\">\n                  <!-- spatial BuTTON RUN -->\n                  <button\n                    class=\"btn btn-primary\"\n                    style=\"background-color: #14274e;\"\n                    (click)=\"runSpatialQuery()\"\n                    *ngIf=\"\n                      chosenGeoSQLFunction === 'GEO_CIRCLE_KM' ||\n                      chosenGeoSQLFunction === 'GEO_RECTANGLE'\n                    \"\n                  >\n                    <i\n                      *ngIf=\"isLoading === true\"\n                      style=\"font-size: 1rem;\"\n                      class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"\n                    ></i>\n                    Execute\n                    <i\n                      style=\"font-size: 1.2rem;\"\n                      class=\"fas fa-angle-right ml-2\"\n                    ></i>\n                  </button>\n                  <!-- spatiOtEMPORAL BuTTON RUN -->\n                  <button\n                    class=\"btn btn-primary\"\n                    style=\"background-color: #14274e;\"\n                    (click)=\"runSpatioTemporalQuery()\"\n                    *ngIf=\"\n                      chosenGeoSQLFunction === 'GEO_TEMPORAL_CIRCLE_KM' ||\n                      chosenGeoSQLFunction === 'GEO_TEMPORAL_RECTANGLE'\n                    \"\n                  >\n                    <i\n                      *ngIf=\"isLoading === true\"\n                      style=\"font-size: 1rem;\"\n                      class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"\n                    ></i>\n                    Execute\n                    <i\n                      style=\"font-size: 1.2rem;\"\n                      class=\"fas fa-angle-right ml-2\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <!-- Final SQL query (editable) - TAB -->\n            <div class=\"col-12 box mt-4\">\n              <div class=\"row w-100 m-0\">\n                <div\n                  class=\"col-12 p-0 pointerToClick pt-3 pb-3\"\n                  (click)=\"openCloseSQLQueryTab()\"\n                >\n                  <div class=\"row m-0\">\n                    <div class=\"col-auto align-self-center\">\n                      <span\n                        style=\"\n                          color: #14274e;\n                          font-weight: 600;\n                          font-size: 1.2rem;\n                          text-decoration: underline;\n                        \"\n                        >Final SQL query</span\n                      >\n                      <span style=\"color: #14274e; font-size: 0.9rem;\"\n                        >(editable)</span\n                      >\n                    </div>\n                    <div class=\"col text-right align-self-center\">\n                      <i\n                        *ngIf=\"!isSQLqueryTabOpen\"\n                        style=\"font-size: 1.2rem;\"\n                        class=\"fas fa-angle-down mt-2\"\n                      ></i>\n                      <i\n                        *ngIf=\"isSQLqueryTabOpen\"\n                        style=\"font-size: 1.2rem;\"\n                        class=\"fas fa-angle-up mt-2\"\n                      ></i>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- textarea -->\n                <div class=\"row w-100 m-0 mt-1\" *ngIf=\"isSQLqueryTabOpen\">\n                  <div class=\"col-12\">\n                    <textarea\n                      class=\"mt-3\"\n                      placeholder=\"No query available yet.\"\n                      [(ngModel)]=\"query\"\n                    ></textarea>\n                  </div>\n                  <div class=\"col-12 text-right align-self-center pt-3 pb-3\">\n                    <!-- spatial BuTTON RUN -->\n                    <button\n                      class=\"btn btn-primary\"\n                      style=\"background-color: #14274e;\"\n                      (click)=\"runSpatialQuery()\"\n                      *ngIf=\"\n                        chosenGeoSQLFunction === 'GEO_CIRCLE_KM' ||\n                        chosenGeoSQLFunction === 'GEO_RECTANGLE'\n                      \"\n                    >\n                      <i\n                        *ngIf=\"isLoading === true\"\n                        style=\"font-size: 1rem;\"\n                        class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"\n                      ></i>\n                      Execute\n                      <i\n                        style=\"font-size: 1.2rem;\"\n                        class=\"fas fa-angle-right ml-2\"\n                      ></i>\n                    </button>\n                    <!-- spatiOtEMPORAL BuTTON RUN -->\n                    <button\n                      class=\"btn btn-primary\"\n                      style=\"background-color: #14274e;\"\n                      (click)=\"runSpatioTemporalQuery()\"\n                      *ngIf=\"\n                        chosenGeoSQLFunction === 'GEO_TEMPORAL_CIRCLE_KM' ||\n                        chosenGeoSQLFunction === 'GEO_TEMPORAL_RECTANGLE'\n                      \"\n                    >\n                      <i\n                        *ngIf=\"isLoading === true\"\n                        style=\"font-size: 1rem;\"\n                        class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"\n                      ></i>\n                      Execute\n                      <i\n                        style=\"font-size: 1.2rem;\"\n                        class=\"fas fa-angle-right ml-2\"\n                      ></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Final Query in Db Language - TAB -->\n            <div class=\"col-12 box mt-4\">\n              <div\n                class=\"row w-100 m-0 pointerToClick pt-3 pb-3\"\n                (click)=\"openCloseActualDBTab()\"\n              >\n                <div class=\"col-auto align-self-center\">\n                  <span\n                    style=\"\n                      color: #14274e;\n                      font-weight: 600;\n                      font-size: 1.2rem;\n                      text-decoration: underline;\n                    \"\n                    *ngIf=\"activeDatabase === 'neo4j'\"\n                    >Final Query in Cypher</span\n                  >\n                  <span\n                    style=\"\n                      color: #14274e;\n                      font-weight: 600;\n                      font-size: 1.2rem;\n                      text-decoration: underline;\n                    \"\n                    *ngIf=\"activeDatabase === 'hbase'\"\n                    >Final expression in Hbase</span\n                  >\n                  <span\n                    style=\"\n                      color: #14274e;\n                      font-weight: 600;\n                      font-size: 1.2rem;\n                      text-decoration: underline;\n                    \"\n                    *ngIf=\"activeDatabase === 'mongodb'\"\n                    >MongoDB pipeline expressions</span\n                  >\n                  <span\n                    style=\"\n                      color: #14274e;\n                      font-weight: 600;\n                      font-size: 1.2rem;\n                      text-decoration: underline;\n                    \"\n                    *ngIf=\"activeDatabase === 'redis'\"\n                    >Final expression in Redis</span\n                  >\n                </div>\n                <div class=\"col text-right align-self-center\">\n                  <i\n                    *ngIf=\"!isActualDBTabOpen\"\n                    style=\"font-size: 1.2rem;\"\n                    class=\"fas fa-angle-down mt-2\"\n                  ></i>\n                  <i\n                    *ngIf=\"isActualDBTabOpen\"\n                    style=\"font-size: 1.2rem;\"\n                    class=\"fas fa-angle-up mt-2\"\n                  ></i>\n                </div>\n              </div>\n              <div class=\"row w-100 m-0 pb-3\" *ngIf=\"isActualDBTabOpen\">\n                <div class=\"col-12\" style=\"color: #14274e;\">\n                  <!-- No query available yet. -->\n                  {{ actualQuery }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Leaflet - Map & web player -->\n        <div class=\"col-6 pr-0\" style=\"min-height: 100vh; max-height: 100vh;\">\n          <!-- web player -->\n          <div\n            class=\"row w-100 m-0 p-0 webPlayerPositioning\"\n            *ngIf=\"\n              chosenGeoSQLFunction === 'GEO_TEMPORAL_CIRCLE_KM' ||\n              chosenGeoSQLFunction === 'GEO_TEMPORAL_RECTANGLE'\n            \"\n          >\n            <div\n              class=\"col-12\"\n              style=\"box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.283) !important;\"\n            >\n              <div\n                class=\"row w-100 m-0 p-2\"\n                style=\"background-color: rgb(85, 85, 85); border-radius: 12px;\"\n              >\n                <div class=\"col-auto align-self-center\" style=\"z-index: 1000;\">\n                  <div\n                    class=\"btn btn-light font12 mr-2 p-0 pl-2 pr-2\"\n                    style=\"padding-top: 2px; padding-bottom: 2px;\"\n                    (click)=\"playSpatioTemporal()\"\n                  >\n                    <i class=\"fa fa-play\"></i>\n                  </div>\n                  <div\n                    class=\"btn btn-light font12 mr-2 p-0 pl-2 pr-2\"\n                    style=\"padding-top: 2px; padding-bottom: 2px;\"\n                  >\n                    <i class=\"fa fa-pause\"></i>\n                  </div>\n                </div>\n                <div\n                  class=\"col-12 p-0 text-center text-white font14\"\n                  style=\"position: absolute; top: 10px;\"\n                >\n                  <span class=\"font-weight-bold mr-3\">Period Displayed :</span>\n                  <div\n                    class=\"btn btn-light font12 mr-2 p-0 pl-2 pr-2\"\n                    style=\"padding-top: 2px; padding-bottom: 2px;\"\n                  >\n                    <i class=\"fa fa-backward\"></i>\n                  </div>\n                  {{ value | date: 'dd/MM/yyyy HH:mm:ss' }} -\n                  {{ maxValue | date: 'dd/MM/yyyy HH:mm:ss' }}\n                  <div\n                    class=\"btn btn-light font12 ml-2 p-0 pl-2 pr-2\"\n                    style=\"padding-top: 2px; padding-bottom: 2px;\"\n                  >\n                    <i class=\"fa fa-forward\"></i>\n                  </div>\n                </div>\n                <ng5-slider\n                  [(value)]=\"value\"\n                  [(highValue)]=\"maxValue\"\n                  [(options)]=\"opt\"\n                >\n                </ng5-slider>\n                <div class=\"col-6 pl-0 text-white font12\">\n                  <input\n                    *ngIf=\"changeFloor\"\n                    type=\"datetime-local\"\n                    class=\"inputOfDates\"\n                    [(ngModel)]=\"opt.floor\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                  />\n                  <span *ngIf=\"!changeFloor\">{{\n                    opt.floor | date: 'dd/MM/yyyy HH:mm:ss'\n                  }}</span>\n                  <i\n                    class=\"fa fa-edit ml-2 pointerToClick\"\n                    *ngIf=\"!changeFloor\"\n                    (click)=\"changeFloorOrCeil('floor')\"\n                    style=\"color: white !important;\"\n                  ></i>\n                  <i\n                    class=\"fa fa-check ml-2 pointerToClick\"\n                    *ngIf=\"changeFloor\"\n                    (click)=\"changeFloorOrCeil('floor')\"\n                    style=\"color: white !important;\"\n                  ></i>\n                </div>\n                <div class=\"col-6 text-right pr-0 text-white font12\">\n                  <input\n                    *ngIf=\"changeCeil\"\n                    type=\"datetime-local\"\n                    class=\"inputOfDates\"\n                    [(ngModel)]=\"opt.ceil\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                  />\n                  <span *ngIf=\"!changeCeil\">{{\n                    opt.ceil | date: 'dd/MM/yyyy HH:mm:ss'\n                  }}</span>\n                  <i\n                    class=\"fa fa-edit ml-2 pointerToClick\"\n                    *ngIf=\"!changeCeil\"\n                    (click)=\"changeFloorOrCeil('ceil')\"\n                    style=\"color: white !important;\"\n                  ></i>\n                  <i\n                    class=\"fa fa-check ml-2 pointerToClick\"\n                    *ngIf=\"changeCeil\"\n                    (click)=\"changeFloorOrCeil('ceil')\"\n                    style=\"color: white !important;\"\n                  ></i>\n                </div>\n                <div class=\"col-auto text-white font12 mt-3 pl-0\">\n                  Window (hours) :\n                  <input\n                    type=\"number\"\n                    class=\"inputs\"\n                    [(ngModel)]=\"windowBetweenFloorAndCeil\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                  />\n                </div>\n                <div class=\"col-auto text-white font12 mt-3 pl-0\">\n                  FPS :\n                  <input\n                    type=\"number\"\n                    class=\"inputs\"\n                    [(ngModel)]=\"fps\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- LEAFLET MAP -->\n          <div\n            style=\"\n              min-height: 100vh;\n              max-height: 100vh;\n              box-shadow: -4px 0 10px 3px rgba(0, 0, 0, 0.221);\n            \"\n            leaflet\n            leafletDraw\n            [leafletOptions]=\"options\"\n            [leafletLayers]=\"layers\"\n            (leafletMapReady)=\"onMapReady($event)\"\n            [leafletDrawOptions]=\"drawOptions\"\n            (leafletDrawCreated)=\"onDrawCreated($event)\"\n          >\n            <div [leafletLayer]=\"drawItems\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { QueryConstructionRoutingModule } from './query-construction-routing.module';\nimport { QueryConstructionComponent } from './query-construction.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { LeafletDrawModule } from '@asymmetrik/ngx-leaflet-draw';\nimport { HomeModule } from '@app/home/home.module';\n\n@NgModule({\n  declarations: [QueryConstructionComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    LeafletModule,\n    Ng5SliderModule,\n    LeafletDrawModule,\n    FormsModule,\n    QueryConstructionRoutingModule,\n  ],\n})\nexport class QueryConstructionModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QueryConstructionService {\n  constructor(private httpClient: HttpClient) {}\n\n  spatialSqlQueryPost(\n    query: string,\n    idFieldName: string,\n    locationFieldName: string\n  ) {\n    const body = {\n      query: query,\n      idFieldName: idFieldName,\n      locationFieldName: locationFieldName,\n    };\n\n    return this.httpClient\n      .post('/spatial-sql-query', body, { responseType: 'text' })\n      .toPromise();\n  }\n\n  spatioTemporalSqlQueryPost(\n    query: string,\n    idFieldName: string,\n    locationFieldName: string,\n    timeFieldName: string\n  ) {\n    const body = {\n      query: query,\n      idFieldName: idFieldName,\n      locationFieldName: locationFieldName,\n      timeFieldName: timeFieldName,\n    };\n    return this.httpClient\n      .post('/spatiotemporal-sql-query', body, { responseType: 'text' })\n      .toPromise();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  menuHidden = true;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  toggleMenu() {\n    this.menuHidden = !this.menuHidden;\n  }\n}\n","<header>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"https://github.com/ngx-rocket\" translate\n      >APP_NAME</a\n    >\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      aria-controls=\"navbar-menu\"\n      aria-label=\"Toggle navigation\"\n      (click)=\"toggleMenu()\"\n      [attr.aria-expanded]=\"!menuHidden\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div\n      id=\"navbar-menu\"\n      class=\"collapse navbar-collapse float-xs-none\"\n      [ngbCollapse]=\"menuHidden\"\n    >\n      <div class=\"navbar-nav\">\n        <a\n          class=\"nav-item nav-link text-uppercase\"\n          routerLink=\"/home\"\n          routerLinkActive=\"active\"\n        >\n          <i class=\"fas fa-home\"></i>\n          <span translate>Home</span>\n        </a>\n        <a\n          class=\"nav-item nav-link text-uppercase\"\n          routerLink=\"/about\"\n          routerLinkActive=\"active\"\n        >\n          <i class=\"fas fa-question-circle\"></i>\n          <span translate>About</span>\n        </a>\n      </div>\n      <div class=\"navbar-nav ml-auto\">\n        <app-language-selector\n          inNavbar=\"true\"\n          menuClass=\"dropdown-menu dropdown-menu-right\"\n        ></app-language-selector>\n      </div>\n    </div>\n  </nav>\n</header>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss'],\n})\nexport class ShellComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"container-fluid p-0\">\n  <!-- <div class=\"row w-100 m-0\"> -->\n  <!-- <div\n      class=\"col-md-4 col-lg-3 p-0\"\n      style=\"z-index: 1000; background-color: #eeeeee; max-height: 100vh;\"\n    >\n      <app-sidebar></app-sidebar>\n    </div> -->\n  <!-- <div\n      class=\"col-12 p-0\"\n      style=\"background-color: #222831; max-height: 100vh;\"\n    > -->\n  <router-outlet></router-outlet>\n  <!-- </div> -->\n  <!-- </div> -->\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { I18nModule } from '@app/i18n';\nimport { ShellComponent } from './shell.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ChartsModule,\n    NgbModule,\n    I18nModule,\n    RouterModule,\n  ],\n  declarations: [HeaderComponent, ShellComponent, SidebarComponent],\n})\nexport class ShellModule {}\n","import { Routes, Route } from '@angular/router';\n\nimport { ShellComponent } from './shell.component';\n\n/**\n * Provides helper methods to create routes.\n */\nexport class Shell {\n  /**\n   * Creates routes using the shell component and authentication.\n   * @param routes The routes to add.\n   * @return The new route using shell as the base.\n   */\n  static childRoutes(routes: Routes): Route {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n      // Reuse ShellComponent instance when navigating between child views\n      data: { reuse: true },\n    };\n  }\n}\n\nexport const themeFromMapBox =\n  'https://api.mapbox.com/styles/v1/nikoskous/cki30mfyw42ll19om2sgz8e2q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1Ijoibmlrb3Nrb3VzIiwiYSI6ImNrMnRjajM5NDBxZXczbXA1YmxueGdhcmMifQ.O0Fz93cltHQ10OfqGBS7FQ';\n","import { Component, Input, OnInit } from '@angular/core';\nimport { QuoteService } from '@app/home/quote.service';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport * as _ from 'lodash';\nimport { Label, MultiDataSet } from 'ng2-charts';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  data: Array<any> = [];\n  groupedData: any;\n\n  // bar chart data\n  barChartOptions: ChartOptions = {\n    responsive: true,\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: { xAxes: [{}], yAxes: [{}] },\n    plugins: {\n      datalabels: {\n        anchor: 'end',\n        align: 'end',\n      },\n    },\n  };\n  barChartLabels: Label[] = [\n    '2006',\n    '2007',\n    '2008',\n    '2009',\n    '2010',\n    '2011',\n    '2012',\n  ];\n  barChartType: ChartType = 'bar';\n  barChartLegend = true;\n  // barChartPlugins = [pluginDataLabels];\n\n  public barChartData: ChartDataSets[] = [\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\n  ];\n\n  // doughnutChart Data\n  public doughnutChartLabels: Label[] = [\n    'Download Sales',\n    'In-Store Sales',\n    'Mail-Order Sales',\n  ];\n  public doughnutChartData: MultiDataSet = [\n    [350, 450, 100],\n    [50, 150, 120],\n    [250, 130, 70],\n  ];\n  public doughnutChartType: ChartType = 'doughnut';\n\n  constructor(private quoteService: QuoteService) {}\n\n  ngOnInit() {\n    //   this.quoteService.getNodaSTData().then((res: any) => {\n    //     let parsedData = JSON.parse(res);\n    //     this.data = parsedData['data'];\n    //     this.groupedData = _.groupBy(this.data, 'time');\n    //   });\n  }\n}\n","<div class=\"container-fluid p-0 text-dark\">\n  <!-- Sidebar Header -->\n  <div class=\"row w-100 m-0 sideBarTitle d-flex align-content-center\">\n    <div class=\"col-12 text-center\">\n      <p class=\"font-weight-bold font26 mt-2\">NoDa Spatial Visualization</p>\n      <p>NoSQL Spatial Data visualization tool</p>\n      <a\n        href=\"https://github.com/nkoutroumanis/NoSQL-Operators\"\n        target=\"_blank\"\n        class=\"pointerToClick\"\n      >\n        <img\n          class=\"img-fluid\"\n          src=\"assets/github.png\"\n          style=\"height: 1.3rem;\"\n        />\n      </a>\n    </div>\n  </div>\n\n  <!-- Analytics section -->\n  <div class=\"row w-100 m-0 mt-2 p-2\">\n    <!-- Title -->\n    <div class=\"col-12\">\n      <p class=\"font-weight-bold\" style=\"font-size: 1.1rem;\">Data Analytics</p>\n    </div>\n\n    <!-- Results to show from noda-spring sever -->\n    <div class=\"col-12 mt-3\">\n      <p>\n        <span class=\"font-weight-bold\">\n          Results:\n        </span>\n        {{ data.length }}\n      </p>\n    </div>\n\n    <!-- Doughnut chart -->\n    <div class=\"col-12 mt-5 p-0\">\n      <div>\n        <div style=\"display: block;\">\n          <canvas\n            baseChart\n            [data]=\"doughnutChartData\"\n            [labels]=\"doughnutChartLabels\"\n            [chartType]=\"doughnutChartType\"\n          >\n          </canvas>\n        </div>\n      </div>\n    </div>\n\n    <!-- Bar cHART -->\n    <div class=\"col-12 mt-5 p-0\">\n      <div>\n        <div style=\"display: block;\">\n          <canvas\n            baseChart\n            [datasets]=\"barChartData\"\n            [labels]=\"barChartLabels\"\n            [options]=\"barChartOptions\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n          >\n          </canvas>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","export const env: { [s: string]: string | null } = {\n  npm_package_version: '1.0.0',\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// `.env.ts` is generated by the `npm run env` command\n// `npm run env` exposes environment variables as JSON for any usage you might\n// want, like displaying the version or getting extra config from your CI bot, etc.\n// This is useful for granularity you might need beyond just the environment.\n// Note that as usual, any environment variables you expose through it will end up in your\n// bundle, and you should not use it for any sensitive information like passwords or keys.\nimport { env } from './.env';\n\nexport const environment = {\n  production: false,\n  hmr: false,\n  version: env.npm_package_version + '-dev',\n  serverUrl: 'http://localhost:8080',\n  defaultLanguage: 'en-US',\n  supportedLanguages: ['en-US'],\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode, NgModuleRef, ApplicationRef } from '@angular/core';\nimport { createNewHosts } from '@angularclass/hmr';\n\nexport function hmrBootstrap(\n  module: any,\n  bootstrap: () => Promise<NgModuleRef<any>>\n) {\n  let ngModule: NgModuleRef<any>;\n  module.hot.accept();\n\n  bootstrap()\n    .then((mod) => (ngModule = mod))\n    .catch((err) => console.error(err));\n\n  module.hot.dispose(() => {\n    const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n    const elements = appRef.components.map((c) => c.location.nativeElement);\n    const makeVisible = createNewHosts(elements);\n    ngModule.destroy();\n    makeVisible();\n  });\n}\n","/*\n * Entry point of the application.\n * Only platform bootstrapping code should be here.\n * For app-specific initialization, use `app/app.component.ts`.\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from '@app/app.module';\nimport { environment } from '@env/environment';\nimport { hmrBootstrap } from './hmr';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);\n\nif (environment.hmr) {\n  hmrBootstrap(module, bootstrap);\n} else {\n  bootstrap().catch((err) => console.error(err));\n}\n"]}